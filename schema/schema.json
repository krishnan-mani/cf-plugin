{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Template",
  "description": "Cloudformation template",
  "type": "object",
  "properties": {
    "AWSTemplateFormatVersion": {
      "type": "string",
      "enum": [
        "2010-09-09"
      ]
    },
    "Description": {
      "description": "Template description",
      "type": "string",
      "maxLength": 1024
    },
    "Parameters": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9]+$": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "maxProperties": 50,
      "additionalProperties": false
    },
    "Mappings": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "Conditions": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "Resources": {
      "description": "Template resources",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9]+$": {
          "oneOf": [{
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Account"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::ApiKey"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Authorizer"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::BasePathMapping"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::ClientCertificate"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Deployment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Method"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Model"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Resource"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::RestApi"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::Stage"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApiGateway::UsagePlan"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApplicationAutoScaling::ScalableTarget"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ApplicationAutoScaling::ScalingPolicy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::AutoScaling::AutoScalingGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::AutoScaling::LaunchConfiguration"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::AutoScaling::LifecycleHook"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::AutoScaling::ScalingPolicy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::AutoScaling::ScheduledAction"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CertificateManager::Certificate"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::Authentication"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::CustomResource"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::Init"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::Interface"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::Stack"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::WaitCondition"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFormation::WaitConditionHandle"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudFront::Distribution"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudTrail::Trail"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CloudWatch::Alarm"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CodeCommit::Repository"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CodeDeploy::Application"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CodeDeploy::DeploymentConfig"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CodeDeploy::DeploymentGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CodePipeline::CustomActionType"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::CodePipeline::Pipeline"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Config::ConfigRule"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Config::ConfigurationRecorder"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Config::DeliveryChannel"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::DataPipeline::Pipeline"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::DirectoryService::MicrosoftAD"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::DirectoryService::SimpleAD"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::DynamoDB::Table"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::CustomerGateway"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::DHCPOptions"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::EIP"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::EIPAssociation"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::FlowLog"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::Host"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::Instance"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::InternetGateway"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::NatGateway"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::NetworkAcl"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::NetworkAclEntry"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::NetworkInterface"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::NetworkInterfaceAttachment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::PlacementGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::Route"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::RouteTable"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::SecurityGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::SecurityGroupEgress"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::SecurityGroupIngress"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::SpotFleet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::Subnet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::SubnetNetworkAclAssociation"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::SubnetRouteTableAssociation"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::Volume"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VolumeAttachment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPC"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPCDHCPOptionsAssociation"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPCEndpoint"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPCGatewayAttachment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPCPeeringConnection"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPNConnection"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPNConnectionRoute"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPNGateway"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EC2::VPNGatewayRoutePropagation"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ECR::Repository"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ECS::Cluster"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ECS::Service"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ECS::TaskDefinition"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EFS::FileSystem"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EFS::MountTarget"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElastiCache::CacheCluster"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElastiCache::ParameterGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElastiCache::ReplicationGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElastiCache::SecurityGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElastiCache::SecurityGroupIngress"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElastiCache::SubnetGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::Application"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::ApplicationVersion"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::ConfigurationTemplate"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticBeanstalk::Environment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticLoadBalancing::LoadBalancer"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticLoadBalancingV2::Listener"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticLoadBalancingV2::ListenerRule"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticLoadBalancingV2::LoadBalancer"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::ElasticLoadBalancingV2::TargetGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Elasticsearch::Domain"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EMR::Cluster"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EMR::InstanceGroupConfig"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::EMR::Step"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Events::Rule"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::GameLift::Alias"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::GameLift::Build"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::GameLift::Fleet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::AccessKey"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::Group"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::InstanceProfile"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::ManagedPolicy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::Policy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::Role"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::User"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IAM::UserToGroupAddition"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IoT::Certificate"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IoT::Policy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IoT::PolicyPrincipalAttachment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IoT::Thing"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IoT::ThingPrincipalAttachment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::IoT::TopicRule"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Kinesis::Stream"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::KinesisFirehose::DeliveryStream"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::KMS::Alias"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::KMS::Key"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Lambda::EventSourceMapping"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Lambda::Alias"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Lambda::Function"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Lambda::Permission"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Lambda::Version"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Logs::Destination"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Logs::LogGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Logs::LogStream"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Logs::MetricFilter"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Logs::SubscriptionFilter"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::OpsWorks::App"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::OpsWorks::ElasticLoadBalancerAttachment"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::OpsWorks::Instance"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::OpsWorks::Layer"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::OpsWorks::Stack"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBCluster"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBClusterParameterGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBInstance"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBParameterGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBSecurityGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBSecurityGroupIngress"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::DBSubnetGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::EventSubscription"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::RDS::OptionGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Redshift::Cluster"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterParameterGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterSecurityGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterSecurityGroupIngress"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Redshift::ClusterSubnetGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Route53::HealthCheck"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Route53::HostedZone"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Route53::RecordSet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::Route53::RecordSetGroup"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::S3::Bucket"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::S3::BucketPolicy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SDB::Domain"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SNS::Subscription"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SNS::Topic"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SNS::TopicPolicy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SQS::Queue"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SQS::QueuePolicy"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::SSM::Document"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::ByteMatchSet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::IPSet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::Rule"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::SizeConstraintSet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::SqlInjectionMatchSet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::WebACL"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WAF::XssMatchSet"
            },
            {
              "$ref": "#/definitions/resource_types/AWS::WorkSpaces::Workspace"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "Outputs": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "object",
          "properties": {
            "Value": {
              "$ref": "#/definitions/string"
            },
            "Description": {
              "type": "string"
            }
          },
          "required": [
            "Value"
          ]
        }
      },
      "minProperties": 1,
      "maxProperties": 10,
      "additionalProperties": false
    },
    "Metadata": {
      "type": "object"
    }
  },
  "required": [
    "Resources"
  ],
  "additionalProperties": false,
  "definitions": {
    "Resource": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "object"
        },
        "Type": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ]
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "enum": [
            "String",
            "Number",
            "List<Number>",
            "CommaDelimitedList",
            "AWS::EC2::AvailabilityZone::Name",
            "AWS::EC2::Image::Id",
            "AWS::EC2::Instance::Id",
            "AWS::EC2::KeyPair::KeyName",
            "AWS::EC2::SecurityGroup::GroupName",
            "AWS::EC2::SecurityGroup::Id",
            "AWS::EC2::Subnet::Id",
            "AWS::EC2::Volume::Id",
            "AWS::EC2::VPC::Id",
            "AWS::Route53::HostedZone::Id",
            "List<AWS::EC2::AvailabilityZone::Name>",
            "List<AWS::EC2::Image::Id>",
            "List<AWS::EC2::Instance::Id>",
            "List<AWS::EC2::SecurityGroup::GroupName>",
            "List<AWS::EC2::SecurityGroup::Id>",
            "List<AWS::EC2::Subnet::Id>",
            "List<AWS::EC2::Volume::Id>",
            "List<AWS::EC2::VPC::Id>",
            "List<AWS::Route53::HostedZone::Id>",
            "List<String>"
          ]
        },
        "AllowedPattern": {
          "type": "string"
        },
        "AllowedValues": {
          "type": "array"
        },
        "ConstraintDescription": {
          "type": "string"
        },
        "Default": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "MaxLength": {
          "type": "string"
        },
        "MaxValue": {
          "type": "string"
        },
        "MinLength": {
          "type": "string"
        },
        "MinValue": {
          "type": "string"
        },
        "NoEcho": {
          "type": [
            "string",
            "boolean"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "Type"
      ]
    },
    "attributes": {
      "CreationPolicy": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "ResourceSignal"
        ],
        "properties": {
          "ResourceSignal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Count": {
                "$ref": "#/definitions/integer"
              },
              "Timeout": {
                "$ref": "#/definitions/string"
              }
            }
          }
        }
      },
      "DependsOn": {
        "oneOf": [{
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "DeletionPolicy": {
        "type": "string",
        "enum": [
          "Delete",
          "Retain",
          "Snapshot"
        ]
      },
      "UpdatePolicy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "AutoScalingRollingUpdate": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "MaxBatchSize": {
                "$ref": "#/definitions/integer"
              },
              "MinInstancesInService": {
                "$ref": "#/definitions/integer"
              },
              "MinSuccessfulInstancesPercent": {
                "$ref": "#/definitions/integer"
              },
              "PauseTime": {
                "$ref": "#/definitions/string"
              },
              "SuspendProcesses": {
                "$ref": "#/definitions/list<string>"
              },
              "WaitOnResourceSignals": {
                "$ref": "#/definitions/boolean"
              }
            }
          },
          "AutoScalingScheduledAction": {
            "type": "object",
            "additionalProperties": false,
            "IgnoreUnmodifiedGroupSizeProperties": {
              "$ref": "#/definitions/boolean"
            }
          }
        }
      }
    },
    "resource_types": {
      "AWS::ApiGateway::Account": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CloudWatchRoleArn": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Account"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::ApiKey": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Enabled": {
                "$ref": "#/definitions/boolean"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "StageKeys": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-apitgateway-apikey-stagekey"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::ApiKey"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Authorizer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AuthorizerCredentials": {
                "$ref": "#/definitions/string"
              },
              "AuthorizerResultTtlInSeconds": {
                "$ref": "#/definitions/integer"
              },
              "AuthorizerUri": {
                "$ref": "#/definitions/string"
              },
              "IdentitySource": {
                "$ref": "#/definitions/string"
              },
              "IdentityValidationExpression": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "ProviderARNs": {
                "$ref": "#/definitions/list<string>"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              },
              "Type": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "IdentitySource",
              "Name",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Authorizer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::BasePathMapping": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BasePath": {
                "$ref": "#/definitions/string"
              },
              "DomainName": {
                "$ref": "#/definitions/string"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              },
              "Stage": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DomainName",
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::BasePathMapping"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::ClientCertificate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::ClientCertificate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Deployment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              },
              "StageDescription": {
                "$ref": "#/definitions/property_types/aws-properties-apitgateway-deployment-stagedescription"
              },
              "StageName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Deployment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Method": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApiKeyRequired": {
                "$ref": "#/definitions/boolean"
              },
              "AuthorizationType": {
                "$ref": "#/definitions/string"
              },
              "AuthorizerId": {
                "$ref": "#/definitions/string"
              },
              "HttpMethod": {
                "$ref": "#/definitions/string"
              },
              "Integration": {
                "$ref": "#/definitions/property_types/aws-properties-apitgateway-method-integration"
              },
              "MethodResponses": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-apitgateway-method-methodresponse"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "RequestModels": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "RequestParameters": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "ResourceId": {
                "$ref": "#/definitions/string"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AuthorizationType",
              "HttpMethod",
              "ResourceId",
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Method"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Model": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ContentType": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              },
              "Schema": {
                "type": "object"
              }
            },
            "required": [
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Model"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Resource": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ParentId": {
                "$ref": "#/definitions/string"
              },
              "PathPart": {
                "$ref": "#/definitions/string"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ParentId",
              "PathPart",
              "RestApiId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Resource"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::RestApi": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Body": {
                "type": "object"
              },
              "BodyS3Location": {
                "$ref": "#/definitions/property_types/aws-properties-apitgateway-restapi-bodys3location"
              },
              "CloneFrom": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "FailOnWarnings": {
                "$ref": "#/definitions/boolean"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Parameters": {
                "$ref": "#/definitions/list<string>"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::RestApi"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::Stage": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheClusterEnabled": {
                "$ref": "#/definitions/boolean"
              },
              "CacheClusterSize": {
                "$ref": "#/definitions/string"
              },
              "ClientCertificateId": {
                "$ref": "#/definitions/string"
              },
              "DeploymentId": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "MethodSettings": {
                "$ref": "#/definitions/property_types/aws-properties-apitgateway-stage-methodsetting"
              },
              "RestApiId": {
                "$ref": "#/definitions/string"
              },
              "StageName": {
                "$ref": "#/definitions/string"
              },
              "Variables": {
                "$ref": "#/definitions/key-value-pairs"
              }
            },
            "required": [
              "DeploymentId",
              "RestApiId",
              "StageName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::Stage"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApiGateway::UsagePlan": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApiStages": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-apigateway-usageplan-apistage"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Quota": {
                "$ref": "#/definitions/property_types/aws-properties-apigateway-usageplan-quotasettings"
              },
              "Throttle": {
                "$ref": "#/definitions/property_types/aws-properties-apigateway-usageplan-throttlesettings"
              },
              "UsagePlanName": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApiGateway::UsagePlan"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ApplicationAutoScaling::ScalableTarget": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "MaxCapacity": {
                "$ref": "#/definitions/integer"
              },
              "MinCapacity": {
                "$ref": "#/definitions/integer"
              },
              "ResourceId": {
                "$ref": "#/definitions/string"
              },
              "RoleARN": {
                "$ref": "#/definitions/string"
              },
              "ScalableDimension": {
                "$ref": "#/definitions/string"
              },
              "ServiceNamespace": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "MaxCapacity",
              "MinCapacity",
              "ResourceId",
              "RoleARN",
              "ScalableDimension",
              "ServiceNamespace"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApplicationAutoScaling::ScalableTarget"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ApplicationAutoScaling::ScalingPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyName": {
                "$ref": "#/definitions/string"
              },
              "PolicyType": {
                "$ref": "#/definitions/string"
              },
              "ResourceId": {
                "$ref": "#/definitions/string"
              },
              "ScalableDimension": {
                "$ref": "#/definitions/string"
              },
              "ServiceNamespace": {
                "$ref": "#/definitions/string"
              },
              "ScalingTargetId": {
                "$ref": "#/definitions/string"
              },
              "StepScalingPolicyConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration"
              }
            },
            "required": [
              "PolicyName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ApplicationAutoScaling::ScalingPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::AutoScalingGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AvailabilityZones": {
                "$ref": "#/definitions/list<string>"
              },
              "Cooldown": {
                "$ref": "#/definitions/string"
              },
              "DesiredCapacity": {
                "$ref": "#/definitions/string"
              },
              "HealthCheckGracePeriod": {
                "$ref": "#/definitions/integer"
              },
              "HealthCheckType": {
                "$ref": "#/definitions/string"
              },
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "LaunchConfigurationName": {
                "$ref": "#/definitions/string"
              },
              "LoadBalancerNames": {
                "$ref": "#/definitions/list<string>"
              },
              "MaxSize": {
                "$ref": "#/definitions/string"
              },
              "MetricsCollection": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-as-metricscollection"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "MinSize": {
                "$ref": "#/definitions/string"
              },
              "NotificationConfigurations": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-as-notificationconfigurations"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "PlacementGroup": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-as-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "TargetGroupARNs": {
                "$ref": "#/definitions/list<string>"
              },
              "TerminationPolicies": {
                "$ref": "#/definitions/list<string>"
              },
              "VPCZoneIdentifier": {
                "$ref": "#/definitions/list<string>"
              },
              "NotificationConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-as-notificationconfigurations"
              }
            },
            "required": [
              "MaxSize",
              "MinSize"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::AutoScalingGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          },
          "CreationPolicy": {
            "$ref": "#/definitions/attributes/CreationPolicy"
          },
          "UpdatePolicy": {
            "$ref": "#/definitions/attributes/UpdatePolicy"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::LaunchConfiguration": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AssociatePublicIpAddress": {
                "$ref": "#/definitions/boolean"
              },
              "BlockDeviceMappings": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-as-launchconfig-blockdev-mapping"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "ClassicLinkVPCId": {
                "$ref": "#/definitions/string"
              },
              "ClassicLinkVPCSecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "EbsOptimized": {
                "$ref": "#/definitions/boolean"
              },
              "IamInstanceProfile": {
                "$ref": "#/definitions/string"
              },
              "ImageId": {
                "$ref": "#/definitions/string"
              },
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "InstanceMonitoring": {
                "$ref": "#/definitions/boolean"
              },
              "InstanceType": {
                "$ref": "#/definitions/string"
              },
              "KernelId": {
                "$ref": "#/definitions/string"
              },
              "KeyName": {
                "$ref": "#/definitions/string"
              },
              "PlacementTenancy": {
                "$ref": "#/definitions/string"
              },
              "RamDiskId": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "SpotPrice": {
                "$ref": "#/definitions/string"
              },
              "UserData": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ImageId",
              "InstanceType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::LaunchConfiguration"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::LifecycleHook": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoScalingGroupName": {
                "$ref": "#/definitions/string"
              },
              "DefaultResult": {
                "$ref": "#/definitions/string"
              },
              "HeartbeatTimeout": {
                "$ref": "#/definitions/integer"
              },
              "LifecycleTransition": {
                "$ref": "#/definitions/string"
              },
              "NotificationMetadata": {
                "$ref": "#/definitions/string"
              },
              "NotificationTargetARN": {
                "$ref": "#/definitions/string"
              },
              "RoleARN": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AutoScalingGroupName",
              "LifecycleTransition"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::LifecycleHook"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::ScalingPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AdjustmentType": {
                "$ref": "#/definitions/string"
              },
              "AutoScalingGroupName": {
                "$ref": "#/definitions/string"
              },
              "Cooldown": {
                "$ref": "#/definitions/string"
              },
              "EstimatedInstanceWarmup": {
                "$ref": "#/definitions/integer"
              },
              "MetricAggregationType": {
                "$ref": "#/definitions/string"
              },
              "MinAdjustmentMagnitude": {
                "$ref": "#/definitions/integer"
              },
              "PolicyType": {
                "$ref": "#/definitions/string"
              },
              "ScalingAdjustment": {
                "$ref": "#/definitions/integer"
              },
              "StepAdjustments": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-autoscaling-scalingpolicy-stepadjustments"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "AdjustmentType",
              "AutoScalingGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::ScalingPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::AutoScaling::ScheduledAction": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoScalingGroupName": {
                "$ref": "#/definitions/string"
              },
              "DesiredCapacity": {
                "$ref": "#/definitions/integer"
              },
              "EndTime": {
                "$ref": "#/definitions/timestamp"
              },
              "MaxSize": {
                "$ref": "#/definitions/integer"
              },
              "MinSize": {
                "$ref": "#/definitions/integer"
              },
              "Recurrence": {
                "$ref": "#/definitions/string"
              },
              "StartTime": {
                "$ref": "#/definitions/timestamp"
              }
            },
            "required": [
              "AutoScalingGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::AutoScaling::ScheduledAction"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CertificateManager::Certificate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DomainName": {
                "$ref": "#/definitions/string"
              },
              "DomainValidationOptions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-certificatemanager-certificate-domainvalidationoption"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "SubjectAlternativeNames": {
                "$ref": "#/definitions/list<string>"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "DomainName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CertificateManager::Certificate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Authentication": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "accessKeyId": {
                "$ref": "#/definitions/string"
              },
              "buckets": {
                "$ref": "#/definitions/list<string>"
              },
              "password": {
                "$ref": "#/definitions/string"
              },
              "secretKey": {
                "$ref": "#/definitions/string"
              },
              "type": {
                "$ref": "#/definitions/string"
              },
              "uris": {
                "$ref": "#/definitions/list<string>"
              },
              "username": {
                "$ref": "#/definitions/string"
              },
              "roleName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Authentication"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::CustomResource": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "ServiceToken": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ServiceToken"
            ]
          },
          "Type": {
            "oneOf": [{
                "enum": [
                  "AWS::CloudFormation::CustomResource"
                ]
              },
              {
                "pattern": "^Custom::.*"
              }
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Init": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {}
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Init"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Interface": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ParameterGroups": {
                "$ref": "#/definitions/property_types/aws-properties-cloudformation-interface-parametergroup"
              },
              "ParameterLabels": {
                "$ref": "#/definitions/property_types/aws-properties-cloudformation-interface-parameterlabel"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Interface"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::Stack": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "NotificationARNs": {
                "$ref": "#/definitions/list<string>"
              },
              "Parameters": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-stack-parameters"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "TemplateURL": {
                "$ref": "#/definitions/string"
              },
              "TimeoutInMinutes": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "TemplateURL"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::Stack"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::WaitCondition": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Count": {
                "$ref": "#/definitions/string"
              },
              "Handle": {
                "$ref": "#/definitions/string"
              },
              "Timeout": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Handle",
              "Timeout"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::WaitCondition"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          },
          "CreationPolicy": {
            "$ref": "#/definitions/attributes/CreationPolicy"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFormation::WaitConditionHandle": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {}
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFormation::WaitConditionHandle"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CloudFront::Distribution": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DistributionConfig": {
                "$ref": "#/definitions/property_types/aws-properties-cloudfront-distributionconfig"
              }
            },
            "required": [
              "DistributionConfig"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudFront::Distribution"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudTrail::Trail": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CloudWatchLogsLogGroupArn": {
                "$ref": "#/definitions/string"
              },
              "CloudWatchLogsRoleArn": {
                "$ref": "#/definitions/string"
              },
              "EnableLogFileValidation": {
                "$ref": "#/definitions/boolean"
              },
              "IncludeGlobalServiceEvents": {
                "$ref": "#/definitions/boolean"
              },
              "IsLogging": {
                "$ref": "#/definitions/boolean"
              },
              "IsMultiRegionTrail": {
                "$ref": "#/definitions/boolean"
              },
              "KMSKeyId": {
                "$ref": "#/definitions/string"
              },
              "S3BucketName": {
                "$ref": "#/definitions/string"
              },
              "S3KeyPrefix": {
                "$ref": "#/definitions/string"
              },
              "SnsTopicName": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "IsLogging",
              "S3BucketName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudTrail::Trail"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CloudWatch::Alarm": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ActionsEnabled": {
                "$ref": "#/definitions/boolean"
              },
              "AlarmActions": {
                "$ref": "#/definitions/list<string>"
              },
              "AlarmDescription": {
                "$ref": "#/definitions/string"
              },
              "AlarmName": {
                "$ref": "#/definitions/string"
              },
              "ComparisonOperator": {
                "$ref": "#/definitions/string"
              },
              "Dimensions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-cw-dimension"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "EvaluationPeriods": {
                "$ref": "#/definitions/string"
              },
              "InsufficientDataActions": {
                "$ref": "#/definitions/list<string>"
              },
              "MetricName": {
                "$ref": "#/definitions/string"
              },
              "Namespace": {
                "$ref": "#/definitions/string"
              },
              "OKActions": {
                "$ref": "#/definitions/list<string>"
              },
              "Period": {
                "$ref": "#/definitions/string"
              },
              "Statistic": {
                "$ref": "#/definitions/string"
              },
              "Threshold": {
                "$ref": "#/definitions/string"
              },
              "Unit": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ComparisonOperator",
              "EvaluationPeriods",
              "MetricName",
              "Namespace",
              "Period",
              "Statistic",
              "Threshold"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CloudWatch::Alarm"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodeCommit::Repository": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RepositoryDescription": {
                "$ref": "#/definitions/string"
              },
              "RepositoryName": {
                "$ref": "#/definitions/string"
              },
              "Triggers": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-codecommit-repository-triggers"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "RepositoryName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeCommit::Repository"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodeDeploy::Application": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeDeploy::Application"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CodeDeploy::DeploymentConfig": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeploymentConfigName": {
                "$ref": "#/definitions/string"
              },
              "MinimumHealthyHosts": {
                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeDeploy::DeploymentConfig"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::CodeDeploy::DeploymentGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/string"
              },
              "AutoScalingGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "Deployment": {
                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-deployment"
              },
              "DeploymentConfigName": {
                "$ref": "#/definitions/string"
              },
              "DeploymentGroupName": {
                "$ref": "#/definitions/string"
              },
              "Ec2TagFilters": {
                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-ec2tagfilters"
              },
              "OnPremisesInstanceTagFilters": {
                "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters"
              },
              "ServiceRoleArn": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ApplicationName",
              "ServiceRoleArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodeDeploy::DeploymentGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodePipeline::CustomActionType": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Category": {
                "$ref": "#/definitions/string"
              },
              "ConfigurationProperties": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-configurationproperties"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "InputArtifactDetails": {
                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-artifactdetails"
              },
              "OutputArtifactDetails": {
                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-artifactdetails"
              },
              "Provider": {
                "$ref": "#/definitions/string"
              },
              "Settings": {
                "$ref": "#/definitions/property_types/aws-resource-codepipeline-customactiontype-settings"
              },
              "Version": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Category",
              "InputArtifactDetails",
              "OutputArtifactDetails",
              "Provider"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodePipeline::CustomActionType"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::CodePipeline::Pipeline": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ArtifactStore": {
                "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-artifactstore"
              },
              "DisableInboundStageTransitions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-disableinboundstagetransitions"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "RestartExecutionOnUpdate": {
                "$ref": "#/definitions/boolean"
              },
              "RoleArn": {
                "$ref": "#/definitions/string"
              },
              "Stages": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "ArtifactStore",
              "RoleArn",
              "Stages"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::CodePipeline::Pipeline"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Config::ConfigRule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ConfigRuleName": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "InputParameters": {
                "type": "object"
              },
              "MaximumExecutionFrequency": {
                "$ref": "#/definitions/string"
              },
              "Scope": {
                "$ref": "#/definitions/property_types/aws-properties-config-configrule-scope"
              },
              "Source": {
                "$ref": "#/definitions/property_types/aws-properties-config-configrule-source"
              }
            },
            "required": [
              "Source"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Config::ConfigRule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Config::ConfigurationRecorder": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/string"
              },
              "RecordingGroup": {
                "$ref": "#/definitions/property_types/aws-properties-config-configurationrecorder-recordinggroup"
              },
              "RoleARN": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "RoleARN"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Config::ConfigurationRecorder"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Config::DeliveryChannel": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ConfigSnapshotDeliveryProperties": {
                "$ref": "#/definitions/property_types/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "S3BucketName": {
                "$ref": "#/definitions/string"
              },
              "S3KeyPrefix": {
                "$ref": "#/definitions/string"
              },
              "SnsTopicARN": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "S3BucketName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Config::DeliveryChannel"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DataPipeline::Pipeline": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Activate": {
                "$ref": "#/definitions/boolean"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "ParameterObjects": {
                "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-parameterobjects"
              },
              "ParameterValues": {
                "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-parametervalues"
              },
              "PipelineObjects": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-pipelineobjects"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "PipelineTags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-pipelinetags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Name",
              "PipelineObjects"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DataPipeline::Pipeline"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DirectoryService::MicrosoftAD": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CreateAlias": {
                "$ref": "#/definitions/boolean"
              },
              "EnableSso": {
                "$ref": "#/definitions/boolean"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Password": {
                "$ref": "#/definitions/string"
              },
              "ShortName": {
                "$ref": "#/definitions/string"
              },
              "VpcSettings": {
                "$ref": "#/definitions/property_types/aws-properties-directoryservice-microsoftad-vpcsettings"
              }
            },
            "required": [
              "Name",
              "Password",
              "VpcSettings"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DirectoryService::MicrosoftAD"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DirectoryService::SimpleAD": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CreateAlias": {
                "$ref": "#/definitions/boolean"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "EnableSso": {
                "$ref": "#/definitions/boolean"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Password": {
                "$ref": "#/definitions/string"
              },
              "ShortName": {
                "$ref": "#/definitions/string"
              },
              "Size": {
                "$ref": "#/definitions/string"
              },
              "VpcSettings": {
                "$ref": "#/definitions/property_types/aws-properties-directoryservice-simplead-vpcsettings"
              }
            },
            "required": [
              "Name",
              "Password",
              "Size",
              "VpcSettings"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DirectoryService::SimpleAD"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::DynamoDB::Table": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AttributeDefinitions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-dynamodb-attributedef"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "GlobalSecondaryIndexes": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-dynamodb-gsi"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "KeySchema": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-dynamodb-keyschema"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "LocalSecondaryIndexes": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-dynamodb-lsi"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "ProvisionedThroughput": {
                "$ref": "#/definitions/property_types/aws-properties-dynamodb-provisionedthroughput"
              },
              "StreamSpecification": {
                "$ref": "#/definitions/property_types/aws-properties-dynamodb-streamspecification"
              },
              "TableName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AttributeDefinitions",
              "KeySchema",
              "ProvisionedThroughput"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::DynamoDB::Table"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::CustomerGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BgpAsn": {
                "$ref": "#/definitions/integer"
              },
              "IpAddress": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Type": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "BgpAsn",
              "IpAddress",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::CustomerGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::DHCPOptions": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DomainName": {
                "$ref": "#/definitions/string"
              },
              "DomainNameServers": {
                "$ref": "#/definitions/list<string>"
              },
              "NetbiosNameServers": {
                "$ref": "#/definitions/list<string>"
              },
              "NetbiosNodeType": {
                "description": "<p>An integer value indicating the NetBIOS node type:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p><span class=\"strong\"><strong>1</strong></span>: Broadcast (\"B\")</p></li><li class=\"listitem\"><p><span class=\"strong\"><strong>2</strong></span>: Point-to-point (\"P\")</p></li><li class=\"listitem\"><p><span class=\"strong\"><strong>4</strong></span>: Mixed mode (\"M\")</p></li><li class=\"listitem\"><p><span class=\"strong\"><strong>8</strong></span>: Hybrid (\"H\")</p></li></ul></div><p>For more information about these values and about NetBIOS node types, see\n                     <a class=\"ulink\" href=\"http://www.ietf.org/rfc/rfc2132.txt\" target=\"_blank\">RFC 2132</a>, <a class=\"ulink\" href=\"http://tools.ietf.org/rfc/rfc1001.txt\" target=\"_blank\">RFC 1001</a>, and <a class=\"ulink\" href=\"http://tools.ietf.org/rfc/rfc1002.txt\" target=\"_blank\">RFC 1002</a>. We recommend that\n                  you use only the value <code class=\"code\">2</code> at this time (broadcast and multicast are\n                  not currently supported).</p><p><span class=\"emphasis\"><em>Required</em></span>: Required if <code class=\"code\">NetBiosNameServers</code> is specified;\n                  optional otherwise.</p><p><span class=\"emphasis\"><em>Type</em></span>: List of numbers</p><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\">Replacement</a></p><p><span class=\"emphasis\"><em>Example</em></span>: <code class=\"code\">\"NetbiosNodeType\" : 2</code></p>"
              },
              "NtpServers": {
                "$ref": "#/definitions/list<string>"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::DHCPOptions"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::EIP": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "Domain": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::EIP"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::EIPAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllocationId": {
                "$ref": "#/definitions/string"
              },
              "EIP": {
                "$ref": "#/definitions/string"
              },
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "NetworkInterfaceId": {
                "$ref": "#/definitions/string"
              },
              "PrivateIpAddress": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::EIPAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::FlowLog": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeliverLogsPermissionArn": {
                "$ref": "#/definitions/string"
              },
              "LogGroupName": {
                "$ref": "#/definitions/string"
              },
              "ResourceId": {
                "$ref": "#/definitions/string"
              },
              "ResourceType": {
                "$ref": "#/definitions/string"
              },
              "TrafficType": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DeliverLogsPermissionArn",
              "LogGroupName",
              "ResourceId",
              "ResourceType",
              "TrafficType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::FlowLog"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Host": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoPlacement": {
                "$ref": "#/definitions/string"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "InstanceType": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AvailabilityZone",
              "InstanceType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Host"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Instance": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Affinity": {
                "$ref": "#/definitions/string"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "BlockDeviceMappings": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-blockdev-mapping"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "DisableApiTermination": {
                "$ref": "#/definitions/boolean"
              },
              "EbsOptimized": {
                "$ref": "#/definitions/boolean"
              },
              "HostId": {
                "$ref": "#/definitions/string"
              },
              "IamInstanceProfile": {
                "$ref": "#/definitions/string"
              },
              "ImageId": {
                "$ref": "#/definitions/string"
              },
              "InstanceInitiatedShutdownBehavior": {
                "$ref": "#/definitions/string"
              },
              "InstanceType": {
                "$ref": "#/definitions/string"
              },
              "KernelId": {
                "$ref": "#/definitions/string"
              },
              "KeyName": {
                "$ref": "#/definitions/string"
              },
              "Monitoring": {
                "$ref": "#/definitions/boolean"
              },
              "NetworkInterfaces": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-network-iface-embedded"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "PlacementGroupName": {
                "$ref": "#/definitions/string"
              },
              "PrivateIpAddress": {
                "$ref": "#/definitions/string"
              },
              "RamdiskId": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroupIds": {
                "$ref": "#/definitions/list<string>"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "SourceDestCheck": {
                "$ref": "#/definitions/boolean"
              },
              "SsmAssociations": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-instance-ssmassociations"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "SubnetId": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Tenancy": {
                "$ref": "#/definitions/string"
              },
              "UserData": {
                "$ref": "#/definitions/string"
              },
              "Volumes": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-mount-point"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "AdditionalInfo": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ImageId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Instance"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          },
          "CreationPolicy": {
            "$ref": "#/definitions/attributes/CreationPolicy"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::InternetGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::InternetGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NatGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllocationId": {
                "$ref": "#/definitions/string"
              },
              "SubnetId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AllocationId",
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NatGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkAcl": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkAcl"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkAclEntry": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrBlock": {
                "$ref": "#/definitions/string"
              },
              "Egress": {
                "$ref": "#/definitions/boolean"
              },
              "Icmp": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-networkaclentry-icmp"
              },
              "NetworkAclId": {
                "$ref": "#/definitions/string"
              },
              "PortRange": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-networkaclentry-portrange"
              },
              "Protocol": {
                "$ref": "#/definitions/integer"
              },
              "RuleAction": {
                "$ref": "#/definitions/string"
              },
              "RuleNumber": {
                "$ref": "#/definitions/integer"
              }
            },
            "required": [
              "CidrBlock",
              "NetworkAclId",
              "Protocol",
              "RuleAction",
              "RuleNumber"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkAclEntry"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkInterface": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "GroupSet": {
                "$ref": "#/definitions/list<string>"
              },
              "PrivateIpAddress": {
                "$ref": "#/definitions/string"
              },
              "PrivateIpAddresses": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-network-interface-privateipspec"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "SecondaryPrivateIpAddressCount": {
                "$ref": "#/definitions/integer"
              },
              "SourceDestCheck": {
                "$ref": "#/definitions/boolean"
              },
              "SubnetId": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkInterface"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::NetworkInterfaceAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeleteOnTermination": {
                "$ref": "#/definitions/boolean"
              },
              "DeviceIndex": {
                "$ref": "#/definitions/string"
              },
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "NetworkInterfaceId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DeviceIndex",
              "InstanceId",
              "NetworkInterfaceId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::NetworkInterfaceAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::PlacementGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Strategy": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::PlacementGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Route": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationCidrBlock": {
                "$ref": "#/definitions/string"
              },
              "GatewayId": {
                "$ref": "#/definitions/string"
              },
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "NatGatewayId": {
                "$ref": "#/definitions/string"
              },
              "NetworkInterfaceId": {
                "$ref": "#/definitions/string"
              },
              "RouteTableId": {
                "$ref": "#/definitions/string"
              },
              "VpcPeeringConnectionId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DestinationCidrBlock",
              "RouteTableId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Route"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::RouteTable": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "VpcId": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::RouteTable"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "GroupDescription": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroupEgress": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-security-group-rule"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "SecurityGroupIngress": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-security-group-rule"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "GroupDescription"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SecurityGroupEgress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrIp": {
                "$ref": "#/definitions/string"
              },
              "DestinationPrefixListId": {
                "$ref": "#/definitions/string"
              },
              "DestinationSecurityGroupId": {
                "$ref": "#/definitions/string"
              },
              "FromPort": {
                "$ref": "#/definitions/integer"
              },
              "GroupId": {
                "$ref": "#/definitions/string"
              },
              "IpProtocol": {
                "$ref": "#/definitions/string"
              },
              "ToPort": {
                "$ref": "#/definitions/integer"
              }
            },
            "required": [
              "FromPort",
              "GroupId",
              "IpProtocol",
              "ToPort"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SecurityGroupEgress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrIp": {
                "$ref": "#/definitions/string"
              },
              "FromPort": {
                "$ref": "#/definitions/integer"
              },
              "GroupId": {
                "$ref": "#/definitions/string"
              },
              "GroupName": {
                "$ref": "#/definitions/string"
              },
              "IpProtocol": {
                "$ref": "#/definitions/string"
              },
              "SourceSecurityGroupId": {
                "$ref": "#/definitions/string"
              },
              "SourceSecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "SourceSecurityGroupOwnerId": {
                "$ref": "#/definitions/string"
              },
              "ToPort": {
                "$ref": "#/definitions/integer"
              }
            },
            "required": [
              "FromPort",
              "IpProtocol",
              "ToPort"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SpotFleet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SpotFleetRequestConfigData": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata"
              }
            },
            "required": [
              "SpotFleetRequestConfigData"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SpotFleet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Subnet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "CidrBlock": {
                "$ref": "#/definitions/string"
              },
              "MapPublicIpOnLaunch": {
                "$ref": "#/definitions/boolean"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "CidrBlock",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Subnet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SubnetNetworkAclAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "SubnetId": {
                "$ref": "#/definitions/string"
              },
              "NetworkAclId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "SubnetId",
              "NetworkAclId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SubnetNetworkAclAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::SubnetRouteTableAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RouteTableId": {
                "$ref": "#/definitions/string"
              },
              "SubnetId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "RouteTableId",
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::SubnetRouteTableAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::Volume": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoEnableIO": {
                "$ref": "#/definitions/boolean"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "Encrypted": {
                "$ref": "#/definitions/boolean"
              },
              "Iops": {
                "$ref": "#/definitions/integer"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/string"
              },
              "Size": {
                "$ref": "#/definitions/string"
              },
              "SnapshotId": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VolumeType": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AvailabilityZone"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::Volume"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VolumeAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Device": {
                "$ref": "#/definitions/string"
              },
              "InstanceId": {
                "$ref": "#/definitions/string"
              },
              "VolumeId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Device",
              "InstanceId",
              "VolumeId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VolumeAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPC": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CidrBlock": {
                "$ref": "#/definitions/string"
              },
              "EnableDnsSupport": {
                "$ref": "#/definitions/boolean"
              },
              "EnableDnsHostnames": {
                "$ref": "#/definitions/boolean"
              },
              "InstanceTenancy": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "CidrBlock"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPC"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCDHCPOptionsAssociation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DhcpOptionsId": {
                "$ref": "#/definitions/string"
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DhcpOptionsId",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCDHCPOptionsAssociation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCEndpoint": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "RouteTableIds": {
                "$ref": "#/definitions/list<string>"
              },
              "ServiceName": {
                "$ref": "#/definitions/string"
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ServiceName",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCEndpoint"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCGatewayAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "InternetGatewayId": {
                "$ref": "#/definitions/string"
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              },
              "VpnGatewayId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCGatewayAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPCPeeringConnection": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PeerVpcId": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "PeerVpcId",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPCPeeringConnection"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNConnection": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/definitions/string"
              },
              "CustomerGatewayId": {
                "$ref": "#/definitions/string"
              },
              "StaticRoutesOnly": {
                "$ref": "#/definitions/boolean"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpnGatewayId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Type",
              "CustomerGatewayId",
              "VpnGatewayId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNConnection"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNConnectionRoute": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationCidrBlock": {
                "$ref": "#/definitions/string"
              },
              "VpnConnectionId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DestinationCidrBlock",
              "VpnConnectionId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNConnectionRoute"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNGateway": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Type": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNGateway"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EC2::VPNGatewayRoutePropagation": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RouteTableIds": {
                "description": "<p class=\"simpara\">A list of routing table IDs that are associated with a VPC. The routing\n                  tables must be associated with the same VPC that the virtual private gateway is\n                  attached to.</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type</em></span>: List of route table IDs</p><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\">No interruption</a></p>"
              },
              "VpnGatewayId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "RouteTableIds",
              "VpnGatewayId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EC2::VPNGatewayRoutePropagation"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ECR::Repository": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RepositoryName": {
                "$ref": "#/definitions/string"
              },
              "RepositoryPolicyText": {
                "type": "object"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECR::Repository"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ECS::Cluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ClusterName": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECS::Cluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ECS::Service": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Cluster": {
                "$ref": "#/definitions/string"
              },
              "DeploymentConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-ecs-service-deploymentconfiguration"
              },
              "DesiredCount": {
                "$ref": "#/definitions/integer"
              },
              "LoadBalancers": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ecs-service-loadbalancers"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Role": {
                "$ref": "#/definitions/string"
              },
              "TaskDefinition": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DesiredCount",
              "TaskDefinition"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECS::Service"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ECS::TaskDefinition": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ContainerDefinitions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Family": {
                "$ref": "#/definitions/string"
              },
              "TaskRoleArn": {
                "$ref": "#/definitions/string"
              },
              "Volumes": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-volumes"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "ContainerDefinitions",
              "Volumes"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ECS::TaskDefinition"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EFS::FileSystem": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "FileSystemTags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-efs-filesystem-filesystemtags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "PerformanceMode": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EFS::FileSystem"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EFS::MountTarget": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "FileSystemId": {
                "$ref": "#/definitions/string"
              },
              "IpAddress": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "SubnetId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "FileSystemId",
              "SecurityGroups",
              "SubnetId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EFS::MountTarget"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::CacheCluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutoMinorVersionUpgrade": {
                "$ref": "#/definitions/boolean"
              },
              "AZMode": {
                "$ref": "#/definitions/string"
              },
              "CacheNodeType": {
                "$ref": "#/definitions/string"
              },
              "CacheParameterGroupName": {
                "$ref": "#/definitions/string"
              },
              "CacheSecurityGroupNames": {
                "$ref": "#/definitions/list<string>"
              },
              "CacheSubnetGroupName": {
                "$ref": "#/definitions/string"
              },
              "ClusterName": {
                "$ref": "#/definitions/string"
              },
              "Engine": {
                "$ref": "#/definitions/string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/string"
              },
              "NotificationTopicArn": {
                "$ref": "#/definitions/string"
              },
              "NumCacheNodes": {
                "$ref": "#/definitions/string"
              },
              "Port": {
                "$ref": "#/definitions/integer"
              },
              "PreferredAvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "PreferredAvailabilityZones": {
                "$ref": "#/definitions/list<string>"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/string"
              },
              "SnapshotArns": {
                "$ref": "#/definitions/list<string>"
              },
              "SnapshotName": {
                "$ref": "#/definitions/string"
              },
              "SnapshotRetentionLimit": {
                "$ref": "#/definitions/integer"
              },
              "SnapshotWindow": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpcSecurityGroupIds": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "CacheNodeType",
              "Engine",
              "NumCacheNodes"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::CacheCluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::ParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheParameterGroupFamily": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Properties": {
                "$ref": "#/definitions/key-value-pairs"
              }
            },
            "required": [
              "CacheParameterGroupFamily",
              "Description"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::ParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::ReplicationGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AutomaticFailoverEnabled": {
                "$ref": "#/definitions/boolean"
              },
              "AutoMinorVersionUpgrade": {
                "$ref": "#/definitions/boolean"
              },
              "CacheNodeType": {
                "$ref": "#/definitions/string"
              },
              "CacheParameterGroupName": {
                "$ref": "#/definitions/string"
              },
              "CacheSecurityGroupNames": {
                "$ref": "#/definitions/list<string>"
              },
              "CacheSubnetGroupName": {
                "$ref": "#/definitions/string"
              },
              "Engine": {
                "$ref": "#/definitions/string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/string"
              },
              "NodeGroupConfiguration": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticache-replicationgroup-nodegroupconfiguration"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "NotificationTopicArn": {
                "$ref": "#/definitions/string"
              },
              "NumCacheClusters": {
                "$ref": "#/definitions/integer"
              },
              "NumNodeGroups": {
                "$ref": "#/definitions/integer"
              },
              "Port": {
                "$ref": "#/definitions/integer"
              },
              "PreferredCacheClusterAZs": {
                "$ref": "#/definitions/list<string>"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/string"
              },
              "PrimaryClusterId": {
                "$ref": "#/definitions/string"
              },
              "ReplicasPerNodeGroup": {
                "$ref": "#/definitions/integer"
              },
              "ReplicationGroupDescription": {
                "$ref": "#/definitions/string"
              },
              "ReplicationGroupId": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroupIds": {
                "$ref": "#/definitions/list<string>"
              },
              "SnapshotArns": {
                "$ref": "#/definitions/list<string>"
              },
              "SnapshotName": {
                "$ref": "#/definitions/string"
              },
              "SnapshotRetentionLimit": {
                "$ref": "#/definitions/integer"
              },
              "SnapshottingClusterId": {
                "$ref": "#/definitions/string"
              },
              "SnapshotWindow": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Engine",
              "ReplicationGroupDescription"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::ReplicationGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::SecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::SecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::SecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheSecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupOwnerId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "CacheSecurityGroupName",
              "EC2SecurityGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::SecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElastiCache::SubnetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CacheSubnetGroupName": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "SubnetIds": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Description",
              "SubnetIds"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElastiCache::SubnetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::Application": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::Application"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::ApplicationVersion": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "SourceBundle": {
                "$ref": "#/definitions/property_types/aws-properties-beanstalk-sourcebundle"
              }
            },
            "required": [
              "ApplicationName",
              "SourceBundle"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::ApplicationVersion"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::ConfigurationTemplate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "EnvironmentId": {
                "$ref": "#/definitions/string"
              },
              "OptionSettings": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-beanstalk-option-settings"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "SolutionStackName": {
                "$ref": "#/definitions/string"
              },
              "SourceConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-beanstalk-configurationtemplate-sourceconfiguration"
              }
            },
            "required": [
              "ApplicationName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::ConfigurationTemplate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticBeanstalk::Environment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ApplicationName": {
                "$ref": "#/definitions/string"
              },
              "CNAMEPrefix": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "EnvironmentName": {
                "$ref": "#/definitions/string"
              },
              "OptionSettings": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-beanstalk-option-settings"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "SolutionStackName": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "TemplateName": {
                "$ref": "#/definitions/string"
              },
              "Tier": {
                "$ref": "#/definitions/property_types/aws-properties-beanstalk-environment-tier"
              },
              "VersionLabel": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ApplicationName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticBeanstalk::Environment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancing::LoadBalancer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AccessLoggingPolicy": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-accessloggingpolicy"
              },
              "AppCookieStickinessPolicy": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-elb-AppCookieStickinessPolicy"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "AvailabilityZones": {
                "$ref": "#/definitions/list<string>"
              },
              "ConnectionDrainingPolicy": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-connectiondrainingpolicy"
              },
              "ConnectionSettings": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-connectionsettings"
              },
              "CrossZone": {
                "$ref": "#/definitions/boolean"
              },
              "HealthCheck": {
                "$ref": "#/definitions/property_types/aws-properties-ec2-elb-health-check"
              },
              "Instances": {
                "$ref": "#/definitions/list<string>"
              },
              "LBCookieStickinessPolicy": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-elb-LBCookieStickinessPolicy"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "LoadBalancerName": {
                "$ref": "#/definitions/string"
              },
              "Listeners": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-elb-listener"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Policies": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-ec2-elb-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Scheme": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "Subnets": {
                "$ref": "#/definitions/list<string>"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Listeners"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancing::LoadBalancer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::Listener": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Certificates": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-listener-certificates"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "DefaultActions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-listener-defaultactions"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "LoadBalancerArn": {
                "$ref": "#/definitions/string"
              },
              "Port": {
                "$ref": "#/definitions/integer"
              },
              "Protocol": {
                "$ref": "#/definitions/string"
              },
              "SslPolicy": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DefaultActions",
              "LoadBalancerArn",
              "Port",
              "Protocol"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::Listener"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::ListenerRule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Actions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-listenerrule-actions"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Conditions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-listenerrule-conditions"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "ListenerArn": {
                "$ref": "#/definitions/string"
              },
              "Priority": {
                "$ref": "#/definitions/integer"
              }
            },
            "required": [
              "Actions",
              "Conditions",
              "ListenerArn",
              "Priority"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::ListenerRule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::LoadBalancer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LoadBalancerAttributes": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Scheme": {
                "$ref": "#/definitions/string"
              },
              "SecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "Subnets": {
                "$ref": "#/definitions/list<string>"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Subnets"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::LoadBalancer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::ElasticLoadBalancingV2::TargetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HealthCheckIntervalSeconds": {
                "$ref": "#/definitions/integer"
              },
              "HealthCheckPath": {
                "$ref": "#/definitions/string"
              },
              "HealthCheckPort": {
                "$ref": "#/definitions/string"
              },
              "HealthCheckProtocol": {
                "$ref": "#/definitions/string"
              },
              "HealthCheckTimeoutSeconds": {
                "$ref": "#/definitions/integer"
              },
              "HealthyThresholdCount": {
                "$ref": "#/definitions/integer"
              },
              "Matcher": {
                "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-targetgroup-matcher"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Port": {
                "$ref": "#/definitions/integer"
              },
              "Protocol": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "TargetGroupAttributes": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Targets": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "UnhealthyThresholdCount": {
                "$ref": "#/definitions/integer"
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Port",
              "Protocol",
              "VpcId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::ElasticLoadBalancingV2::TargetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Elasticsearch::Domain": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AccessPolicies": {
                "type": "object"
              },
              "AdvancedOptions": {
                "description": "<p>Additional options to specify for the Amazon ES domain. For more information, see\n              <a class=\"ulink\" href=\"http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options\" target=\"_blank\">Configuring Advanced Options</a> in the\n            <em class=\"citetitle\">Amazon Elasticsearch Service Developer Guide</em>.</p><p><span class=\"emphasis\"><em>Required</em></span>: No</p><p><span class=\"emphasis\"><em>Type</em></span>: A JSON object consisting of a string key-value pair, such\n            as:</p><pre class=\"programlisting\"><code class=\"nohighlight\">{\n  \"rest.action.multi.allow_explicit_index\": \"true\"\n}</code></pre><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\">Replacement</a></p>"
              },
              "DomainName": {
                "$ref": "#/definitions/string"
              },
              "EBSOptions": {
                "$ref": "#/definitions/property_types/aws-properties-elasticsearch-domain-ebsoptions"
              },
              "ElasticsearchClusterConfig": {
                "$ref": "#/definitions/property_types/aws-properties-elasticsearch-domain-elasticsearchclusterconfig"
              },
              "ElasticsearchVersion": {
                "$ref": "#/definitions/string"
              },
              "SnapshotOptions": {
                "$ref": "#/definitions/property_types/aws-properties-elasticsearch-domain-snapshotoptions"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Elasticsearch::Domain"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::EMR::Cluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AdditionalInfo": {
                "type": "object"
              },
              "Applications": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-emr-cluster-application"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "BootstrapActions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-emr-cluster-bootstrapactionconfig"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Configurations": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-emr-cluster-configuration"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Instances": {
                "$ref": "#/definitions/property_types/aws-properties-emr-cluster-jobflowinstancesconfig"
              },
              "JobFlowRole": {
                "$ref": "#/definitions/string"
              },
              "LogUri": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "ReleaseLabel": {
                "$ref": "#/definitions/string"
              },
              "ServiceRole": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VisibleToAllUsers": {
                "$ref": "#/definitions/boolean"
              }
            },
            "required": [
              "Instances",
              "JobFlowRole",
              "Name",
              "ServiceRole"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EMR::Cluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EMR::InstanceGroupConfig": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BidPrice": {
                "$ref": "#/definitions/string"
              },
              "Configurations": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-emr-cluster-configuration"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "EbsConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-emr-ebsconfiguration"
              },
              "InstanceCount": {
                "$ref": "#/definitions/integer"
              },
              "InstanceRole": {
                "$ref": "#/definitions/string"
              },
              "InstanceType": {
                "$ref": "#/definitions/string"
              },
              "JobFlowId": {
                "$ref": "#/definitions/string"
              },
              "Market": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "InstanceCount",
              "InstanceRole",
              "InstanceType",
              "JobFlowId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EMR::InstanceGroupConfig"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::EMR::Step": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ActionOnFailure": {
                "$ref": "#/definitions/string"
              },
              "HadoopJarStep": {
                "$ref": "#/definitions/property_types/aws-properties-emr-step-hadoopjarstepconfig"
              },
              "JobFlowId": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ActionOnFailure",
              "HadoopJarStep",
              "JobFlowId",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::EMR::Step"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Events::Rule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "EventPattern": {
                "type": "object"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "RoleArn": {
                "$ref": "#/definitions/string"
              },
              "ScheduleExpression": {
                "$ref": "#/definitions/string"
              },
              "State": {
                "$ref": "#/definitions/string"
              },
              "Targets": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-events-rule-target"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Events::Rule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::GameLift::Alias": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "RoutingStrategy": {
                "$ref": "#/definitions/property_types/aws-properties-gamelift-alias-routingstrategy"
              }
            },
            "required": [
              "Name",
              "RoutingStrategy"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::GameLift::Alias"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::GameLift::Build": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/string"
              },
              "StorageLocation": {
                "$ref": "#/definitions/property_types/aws-properties-gamelift-build-storagelocation"
              },
              "Version": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::GameLift::Build"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::GameLift::Fleet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BuildId": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "DesiredEC2Instances": {
                "$ref": "#/definitions/integer"
              },
              "EC2InboundPermissions": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-gamelift-fleet-ec2inboundpermission"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "EC2InstanceType": {
                "$ref": "#/definitions/string"
              },
              "LogPaths": {
                "$ref": "#/definitions/list<string>"
              },
              "MaxSize": {
                "$ref": "#/definitions/integer"
              },
              "MinSize": {
                "$ref": "#/definitions/integer"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "ServerLaunchParameters": {
                "$ref": "#/definitions/string"
              },
              "ServerLaunchPath": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "BuildId",
              "DesiredEC2Instances",
              "EC2InstanceType",
              "Name",
              "ServerLaunchPath"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::GameLift::Fleet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::AccessKey": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Serial": {
                "$ref": "#/definitions/integer"
              },
              "Status": {
                "$ref": "#/definitions/string"
              },
              "UserName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "UserName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::AccessKey"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::Group": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "GroupName": {
                "$ref": "#/definitions/string"
              },
              "ManagedPolicyArns": {
                "$ref": "#/definitions/list<string>"
              },
              "Path": {
                "$ref": "#/definitions/string"
              },
              "Policies": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-iam-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::Group"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::InstanceProfile": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Path": {
                "$ref": "#/definitions/string"
              },
              "Roles": {
                "description": "<p>The roles associated with this IAM instance profile.</p><p class=\"simpara\"><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p class=\"simpara\"><span class=\"emphasis\"><em>Type</em></span>: List of references to <span class=\"type\">AWS::IAM::Role</span>s. Currently, a\n                  maximum of one role can be assigned to an instance profile.</p><p class=\"simpara\"><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\">No interruption</a></p>"
              }
            },
            "required": [
              "Path",
              "Roles"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::InstanceProfile"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::ManagedPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Groups": {
                "$ref": "#/definitions/list<string>"
              },
              "Path": {
                "$ref": "#/definitions/string"
              },
              "PolicyDocument": {
                "type": "object"
              },
              "Roles": {
                "$ref": "#/definitions/list<string>"
              },
              "Users": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "PolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::ManagedPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::Policy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Groups": {
                "$ref": "#/definitions/list<string>"
              },
              "PolicyDocument": {
                "type": "object"
              },
              "PolicyName": {
                "$ref": "#/definitions/string"
              },
              "Roles": {
                "$ref": "#/definitions/list<string>"
              },
              "Users": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "PolicyDocument",
              "PolicyName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::Policy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::Role": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AssumeRolePolicyDocument": {
                "description": "<p>The trust policy that is associated with this role.</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type</em></span>: A JSON policy document</p><div class=\"aws-note\"><p class=\"aws-note\">Note</p><p>AWS Identity and Access Management (IAM) requires that policies be in JSON format.\nHowever, for templates formatted in YAML, you can create an IAM policy in either JSON or YAML format. AWS CloudFormation always converts a policy to JSON format before submitting it to IAM.</p></div><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\">No interruption</a></p><div class=\"aws-note\"><p class=\"aws-note\">Note</p><p>You can associate only one assume role policy with a role. For an example of\n                     an assume role policy, see <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-templateexamples\" title=\"Template Examples\">Template Examples</a>.</p></div>"
              },
              "ManagedPolicyArns": {
                "$ref": "#/definitions/list<string>"
              },
              "Path": {
                "$ref": "#/definitions/string"
              },
              "Policies": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-iam-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "RoleName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AssumeRolePolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::Role"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::User": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Groups": {
                "$ref": "#/definitions/list<string>"
              },
              "LoginProfile": {
                "$ref": "#/definitions/property_types/aws-properties-iam-user-loginprofile"
              },
              "ManagedPolicyArns": {
                "$ref": "#/definitions/list<string>"
              },
              "Path": {
                "$ref": "#/definitions/string"
              },
              "Policies": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-iam-policy"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "UserName": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::User"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::IAM::UserToGroupAddition": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "GroupName": {
                "$ref": "#/definitions/string"
              },
              "Users": {
                "description": "<p class=\"simpara\"><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p class=\"simpara\"><span class=\"emphasis\"><em>Type</em></span>: List of users</p><p class=\"simpara\"><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\">No interruption</a></p>"
              }
            },
            "required": [
              "GroupName",
              "Users"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IAM::UserToGroupAddition"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::Certificate": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CertificateSigningRequest": {
                "$ref": "#/definitions/string"
              },
              "Status": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "CertificateSigningRequest",
              "Status"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::Certificate"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::Policy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "PolicyName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "PolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::Policy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::PolicyPrincipalAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyName": {
                "$ref": "#/definitions/string"
              },
              "Principal": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "PolicyName",
              "Principal"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::PolicyPrincipalAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::Thing": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AttributePayload": {
                "description": "<p>A JSON string that contains up to three key-value pairs, for example: <code class=\"code\">{\n                     \"attributes\": { \"string1\":\"string2\" } }</code>.</p><p><span class=\"emphasis\"><em>Required</em></span>: No</p><p><span class=\"emphasis\"><em>Type:</em></span> String to string map</p><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt\">No interruption</a></p>"
              },
              "ThingName": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::Thing"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::ThingPrincipalAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Principal": {
                "$ref": "#/definitions/string"
              },
              "ThingName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Principal",
              "ThingName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::ThingPrincipalAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::IoT::TopicRule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "RuleName": {
                "$ref": "#/definitions/string"
              },
              "TopicRulePayload": {
                "$ref": "#/definitions/property_types/aws-properties-iot-topicrulepayload"
              }
            },
            "required": [
              "TopicRulePayload"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::IoT::TopicRule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Kinesis::Stream": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/string"
              },
              "ShardCount": {
                "$ref": "#/definitions/integer"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "ShardCount"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Kinesis::Stream"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::KinesisFirehose::DeliveryStream": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DeliveryStreamName": {
                "$ref": "#/definitions/string"
              },
              "ElasticsearchDestinationConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration"
              },
              "RedshiftDestinationConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration"
              },
              "S3DestinationConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::KinesisFirehose::DeliveryStream"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::KMS::Alias": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AliasName": {
                "$ref": "#/definitions/string"
              },
              "TargetKeyId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "AliasName",
              "TargetKeyId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::KMS::Alias"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::KMS::Key": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Enabled": {
                "$ref": "#/definitions/boolean"
              },
              "EnableKeyRotation": {
                "$ref": "#/definitions/boolean"
              },
              "KeyPolicy": {
                "type": "object"
              }
            },
            "required": [
              "KeyPolicy"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::KMS::Key"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::EventSourceMapping": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BatchSize": {
                "$ref": "#/definitions/integer"
              },
              "Enabled": {
                "$ref": "#/definitions/boolean"
              },
              "EventSourceArn": {
                "$ref": "#/definitions/string"
              },
              "FunctionName": {
                "$ref": "#/definitions/string"
              },
              "StartingPosition": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "EventSourceArn",
              "FunctionName",
              "StartingPosition"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::EventSourceMapping"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Alias": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "FunctionName": {
                "$ref": "#/definitions/string"
              },
              "FunctionVersion": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "FunctionName",
              "FunctionVersion",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Alias"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Function": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Code": {
                "$ref": "#/definitions/property_types/aws-properties-lambda-function-code"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Environment": {
                "$ref": "#/definitions/property_types/aws-properties-lambda-function-environment"
              },
              "FunctionName": {
                "$ref": "#/definitions/string"
              },
              "Handler": {
                "$ref": "#/definitions/string"
              },
              "KmsKeyArn": {
                "$ref": "#/definitions/string"
              },
              "MemorySize": {
                "$ref": "#/definitions/integer"
              },
              "Role": {
                "$ref": "#/definitions/string"
              },
              "Runtime": {
                "$ref": "#/definitions/string"
              },
              "Timeout": {
                "$ref": "#/definitions/integer"
              },
              "VpcConfig": {
                "$ref": "#/definitions/property_types/aws-properties-lambda-function-vpcconfig"
              }
            },
            "required": [
              "Code",
              "Handler",
              "Role",
              "Runtime"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Function"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Permission": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Action": {
                "$ref": "#/definitions/string"
              },
              "FunctionName": {
                "$ref": "#/definitions/string"
              },
              "Principal": {
                "$ref": "#/definitions/string"
              },
              "SourceAccount": {
                "$ref": "#/definitions/string"
              },
              "SourceArn": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Action",
              "FunctionName",
              "Principal"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Permission"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Lambda::Version": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CodeSha256": {
                "$ref": "#/definitions/string"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "FunctionName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "FunctionName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Lambda::Version"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::Destination": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationName": {
                "$ref": "#/definitions/string"
              },
              "DestinationPolicy": {
                "$ref": "#/definitions/string"
              },
              "RoleArn": {
                "$ref": "#/definitions/string"
              },
              "TargetArn": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DestinationName",
              "DestinationPolicy",
              "RoleArn",
              "TargetArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::Destination"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::LogGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LogGroupName": {
                "$ref": "#/definitions/string"
              },
              "RetentionInDays": {
                "$ref": "#/definitions/integer"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::LogGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::LogStream": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "LogGroupName": {
                "$ref": "#/definitions/string"
              },
              "LogStreamName": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "LogGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::LogStream"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::MetricFilter": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "FilterPattern": {
                "$ref": "#/definitions/string"
              },
              "LogGroupName": {
                "$ref": "#/definitions/string"
              },
              "MetricTransformations": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-logs-metricfilter-metrictransformation"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "FilterPattern",
              "LogGroupName",
              "MetricTransformations"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::MetricFilter"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Logs::SubscriptionFilter": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DestinationArn": {
                "$ref": "#/definitions/string"
              },
              "FilterPattern": {
                "$ref": "#/definitions/string"
              },
              "LogGroupName": {
                "$ref": "#/definitions/string"
              },
              "RoleArn": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DestinationArn",
              "FilterPattern",
              "LogGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Logs::SubscriptionFilter"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::App": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AppSource": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-source"
              },
              "Attributes": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "Description": {
                "$ref": "#/definitions/string"
              },
              "Domains": {
                "$ref": "#/definitions/list<string>"
              },
              "EnableSsl": {
                "$ref": "#/definitions/boolean"
              },
              "Environment": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-opsworks-app-environment"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Shortname": {
                "$ref": "#/definitions/string"
              },
              "SslConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-app-sslconfiguration"
              },
              "StackId": {
                "$ref": "#/definitions/string"
              },
              "Type": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Name",
              "StackId",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::App"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::ElasticLoadBalancerAttachment": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ElasticLoadBalancerName": {
                "$ref": "#/definitions/string"
              },
              "LayerId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ElasticLoadBalancerName",
              "LayerId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::ElasticLoadBalancerAttachment"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::Instance": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AmiId": {
                "$ref": "#/definitions/string"
              },
              "Architecture": {
                "$ref": "#/definitions/string"
              },
              "AutoScalingType": {
                "$ref": "#/definitions/string"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "EbsOptimized": {
                "$ref": "#/definitions/boolean"
              },
              "InstallUpdatesOnBoot": {
                "$ref": "#/definitions/boolean"
              },
              "InstanceType": {
                "$ref": "#/definitions/string"
              },
              "LayerIds": {
                "$ref": "#/definitions/list<string>"
              },
              "Os": {
                "$ref": "#/definitions/string"
              },
              "RootDeviceType": {
                "$ref": "#/definitions/string"
              },
              "SshKeyName": {
                "$ref": "#/definitions/string"
              },
              "StackId": {
                "$ref": "#/definitions/string"
              },
              "SubnetId": {
                "$ref": "#/definitions/string"
              },
              "TimeBasedAutoScaling": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-instance-timebasedautoscaling"
              }
            },
            "required": [
              "InstanceType",
              "LayerIds",
              "StackId"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::Instance"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::Layer": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Attributes": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "AutoAssignElasticIps": {
                "$ref": "#/definitions/boolean"
              },
              "AutoAssignPublicIps": {
                "$ref": "#/definitions/boolean"
              },
              "CustomInstanceProfileArn": {
                "$ref": "#/definitions/string"
              },
              "CustomRecipes": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-recipes"
              },
              "CustomSecurityGroupIds": {
                "$ref": "#/definitions/list<string>"
              },
              "EnableAutoHealing": {
                "$ref": "#/definitions/boolean"
              },
              "InstallUpdatesOnBoot": {
                "$ref": "#/definitions/boolean"
              },
              "LifecycleEventConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-lifecycleeventconfiguration"
              },
              "LoadBasedAutoScaling": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-loadbasedautoscaling"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Packages": {
                "$ref": "#/definitions/list<string>"
              },
              "Shortname": {
                "$ref": "#/definitions/string"
              },
              "StackId": {
                "$ref": "#/definitions/string"
              },
              "Type": {
                "$ref": "#/definitions/string"
              },
              "VolumeConfigurations": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-volumeconfig"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "AutoAssignElasticIps",
              "AutoAssignPublicIps",
              "EnableAutoHealing",
              "Name",
              "Shortname",
              "StackId",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::Layer"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::OpsWorks::Stack": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AgentVersion": {
                "$ref": "#/definitions/string"
              },
              "Attributes": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "ChefConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-chefconfiguration"
              },
              "ConfigurationManager": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-stackconfigmanager"
              },
              "CustomCookbooksSource": {
                "$ref": "#/definitions/property_types/aws-properties-opsworks-stack-source"
              },
              "CustomJson": {
                "type": "object"
              },
              "DefaultAvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "DefaultInstanceProfileArn": {
                "$ref": "#/definitions/string"
              },
              "DefaultOs": {
                "$ref": "#/definitions/string"
              },
              "DefaultRootDeviceType": {
                "$ref": "#/definitions/string"
              },
              "DefaultSshKeyName": {
                "$ref": "#/definitions/string"
              },
              "DefaultSubnetId": {
                "$ref": "#/definitions/string"
              },
              "HostnameTheme": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "ServiceRoleArn": {
                "$ref": "#/definitions/string"
              },
              "UseCustomCookbooks": {
                "$ref": "#/definitions/boolean"
              },
              "UseOpsworksSecurityGroups": {
                "$ref": "#/definitions/boolean"
              },
              "VpcId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DefaultInstanceProfileArn",
              "Name",
              "ServiceRoleArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::OpsWorks::Stack"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBCluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AvailabilityZones": {
                "$ref": "#/definitions/string"
              },
              "BackupRetentionPeriod": {
                "$ref": "#/definitions/integer"
              },
              "DatabaseName": {
                "$ref": "#/definitions/string"
              },
              "DBClusterParameterGroupName": {
                "$ref": "#/definitions/string"
              },
              "DBSubnetGroupName": {
                "$ref": "#/definitions/string"
              },
              "Engine": {
                "$ref": "#/definitions/string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/string"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/string"
              },
              "MasterUsername": {
                "$ref": "#/definitions/string"
              },
              "MasterUserPassword": {
                "$ref": "#/definitions/string"
              },
              "Port": {
                "$ref": "#/definitions/integer"
              },
              "PreferredBackupWindow": {
                "$ref": "#/definitions/string"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/string"
              },
              "SnapshotIdentifier": {
                "$ref": "#/definitions/string"
              },
              "StorageEncrypted": {
                "$ref": "#/definitions/boolean"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VpcSecurityGroupIds": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "Engine"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBCluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBClusterParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "description": "<p>A friendly description for this DB cluster parameter group.</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type:</em></span> String</p><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\">Replacement</a></p>"
              },
              "Family": {
                "description": "<p>The database family of this DB cluster parameter group, such as\n                     <code class=\"code\">aurora5.6</code>.</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type:</em></span> String</p><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\">Replacement</a></p>"
              },
              "Parameters": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Description",
              "Family",
              "Parameters"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBClusterParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBInstance": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllocatedStorage": {
                "$ref": "#/definitions/string"
              },
              "AllowMajorVersionUpgrade": {
                "$ref": "#/definitions/boolean"
              },
              "AutoMinorVersionUpgrade": {
                "$ref": "#/definitions/boolean"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "BackupRetentionPeriod": {
                "$ref": "#/definitions/string"
              },
              "CharacterSetName": {
                "$ref": "#/definitions/string"
              },
              "DBClusterIdentifier": {
                "$ref": "#/definitions/string"
              },
              "DBInstanceClass": {
                "$ref": "#/definitions/string"
              },
              "DBInstanceIdentifier": {
                "$ref": "#/definitions/string"
              },
              "DBName": {
                "$ref": "#/definitions/string"
              },
              "DBParameterGroupName": {
                "$ref": "#/definitions/string"
              },
              "DBSecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "DBSnapshotIdentifier": {
                "$ref": "#/definitions/string"
              },
              "DBSubnetGroupName": {
                "$ref": "#/definitions/string"
              },
              "Domain": {
                "$ref": "#/definitions/string"
              },
              "DomainIAMRoleName": {
                "$ref": "#/definitions/string"
              },
              "Engine": {
                "$ref": "#/definitions/string"
              },
              "EngineVersion": {
                "$ref": "#/definitions/string"
              },
              "Iops": {
                "$ref": "#/definitions/integer"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/string"
              },
              "LicenseModel": {
                "$ref": "#/definitions/string"
              },
              "MasterUsername": {
                "$ref": "#/definitions/string"
              },
              "MasterUserPassword": {
                "$ref": "#/definitions/string"
              },
              "MonitoringInterval": {
                "$ref": "#/definitions/integer"
              },
              "MonitoringRoleArn": {
                "$ref": "#/definitions/string"
              },
              "MultiAZ": {
                "$ref": "#/definitions/boolean"
              },
              "OptionGroupName": {
                "$ref": "#/definitions/string"
              },
              "Port": {
                "$ref": "#/definitions/string"
              },
              "PreferredBackupWindow": {
                "$ref": "#/definitions/string"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/string"
              },
              "PubliclyAccessible": {
                "$ref": "#/definitions/boolean"
              },
              "SourceDBInstanceIdentifier": {
                "$ref": "#/definitions/string"
              },
              "StorageEncrypted": {
                "$ref": "#/definitions/boolean"
              },
              "StorageType": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VPCSecurityGroups": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "DBInstanceClass"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBInstance"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "description": "<p>A friendly description of the RDS parameter group. For example, <code class=\"code\">\"My Parameter Group\"</code>.</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type:</em></span> String</p><p><span class=\"emphasis\"><em>Update requires</em></span>: Updates are not supported.</p>"
              },
              "Family": {
                "description": "<p>The database family of this RDS parameter group. For example, <code class=\"code\">\"MySQL5.1\"</code>.</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type:</em></span> String</p><p><span class=\"emphasis\"><em>Update requires</em></span>: Updates are not supported.</p>"
              },
              "Parameters": {
                "$ref": "#/definitions/key-value-pairs"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Description",
              "Family"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBSecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "EC2VpcId": {
                "$ref": "#/definitions/string"
              },
              "DBSecurityGroupIngress": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-rds-security-group-rule"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  },
                  {
                    "$ref": "#/definitions/property_types/aws-properties-rds-security-group-rule"
                  }
                ]
              },
              "GroupDescription": {
                "$ref": "#/definitions/string"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "DBSecurityGroupIngress",
              "GroupDescription"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBSecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBSecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "CIDRIP": {
                "$ref": "#/definitions/string"
              },
              "DBSecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupId": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupOwnerId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "DBSecurityGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBSecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::DBSubnetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DBSubnetGroupDescription": {
                "$ref": "#/definitions/string"
              },
              "SubnetIds": {
                "$ref": "#/definitions/list<string>"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "DBSubnetGroupDescription",
              "SubnetIds"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::DBSubnetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::EventSubscription": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Enabled": {
                "$ref": "#/definitions/boolean"
              },
              "EventCategories": {
                "$ref": "#/definitions/list<string>"
              },
              "SnsTopicArn": {
                "$ref": "#/definitions/string"
              },
              "SourceIds": {
                "$ref": "#/definitions/list<string>"
              },
              "SourceType": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "SnsTopicArn"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::EventSubscription"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::RDS::OptionGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "EngineName": {
                "$ref": "#/definitions/string"
              },
              "MajorEngineVersion": {
                "$ref": "#/definitions/string"
              },
              "OptionGroupDescription": {
                "$ref": "#/definitions/string"
              },
              "OptionConfigurations": {
                "$ref": "#/definitions/property_types/aws-properties-rds-optiongroup-optionconfigurations"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "EngineName",
              "MajorEngineVersion",
              "OptionGroupDescription",
              "OptionConfigurations"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::RDS::OptionGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::Cluster": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AllowVersionUpgrade": {
                "$ref": "#/definitions/boolean"
              },
              "AutomatedSnapshotRetentionPeriod": {
                "$ref": "#/definitions/integer"
              },
              "AvailabilityZone": {
                "$ref": "#/definitions/string"
              },
              "ClusterParameterGroupName": {
                "$ref": "#/definitions/string"
              },
              "ClusterSecurityGroups": {
                "$ref": "#/definitions/list<string>"
              },
              "ClusterSubnetGroupName": {
                "$ref": "#/definitions/string"
              },
              "ClusterType": {
                "$ref": "#/definitions/string"
              },
              "ClusterVersion": {
                "$ref": "#/definitions/string"
              },
              "DBName": {
                "$ref": "#/definitions/string"
              },
              "ElasticIp": {
                "$ref": "#/definitions/string"
              },
              "Encrypted": {
                "$ref": "#/definitions/boolean"
              },
              "HsmClientCertificateIdentifier": {
                "$ref": "#/definitions/string"
              },
              "HsmConfigurationIdentifier": {
                "$ref": "#/definitions/string"
              },
              "KmsKeyId": {
                "$ref": "#/definitions/string"
              },
              "MasterUsername": {
                "$ref": "#/definitions/string"
              },
              "MasterUserPassword": {
                "$ref": "#/definitions/string"
              },
              "NodeType": {
                "$ref": "#/definitions/string"
              },
              "NumberOfNodes": {
                "$ref": "#/definitions/integer"
              },
              "OwnerAccount": {
                "$ref": "#/definitions/string"
              },
              "Port": {
                "$ref": "#/definitions/integer"
              },
              "PreferredMaintenanceWindow": {
                "$ref": "#/definitions/string"
              },
              "PubliclyAccessible": {
                "$ref": "#/definitions/boolean"
              },
              "SnapshotClusterIdentifier": {
                "description": "<p>The name of the cluster the source snapshot was created from. For more information about restoring from a snapshot, see the <a class=\"ulink\" href=\"http://docs.aws.amazon.com/redshift/latest/APIReference/API_RestoreFromClusterSnapshot.html\" target=\"_blank\">RestoreFromClusterSnapshot</a> action in the <em class=\"citetitle\">Amazon Redshift API Reference</em>.</p><p><span class=\"emphasis\"><em>Required</em></span>: No</p><p><span class=\"emphasis\"><em>Required</em></span>: Conditional. This property is required if your IAM policy includes\n                  a restriction on the cluster name, where the resource element specifies anything\n                  other than the wildcard character (<code class=\"code\">*</code>) for the cluster name.</p><p><span class=\"emphasis\"><em>Update requires</em></span>: <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-replacement\">Replacement</a></p>"
              },
              "SnapshotIdentifier": {
                "$ref": "#/definitions/string"
              },
              "VpcSecurityGroupIds": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "ClusterType",
              "DBName",
              "MasterUsername",
              "MasterUserPassword",
              "NodeType"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::Cluster"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterParameterGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "ParameterGroupFamily": {
                "$ref": "#/definitions/string"
              },
              "Parameters": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-property-redshift-clusterparametergroup-parameter"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Description",
              "ParameterGroupFamily"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterParameterGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterSecurityGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Description"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterSecurityGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterSecurityGroupIngress": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ClusterSecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "CIDRIP": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupName": {
                "$ref": "#/definitions/string"
              },
              "EC2SecurityGroupOwnerId": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "ClusterSecurityGroupName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterSecurityGroupIngress"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Redshift::ClusterSubnetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              },
              "SubnetIds": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "Description",
              "SubnetIds"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Redshift::ClusterSubnetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::HealthCheck": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HealthCheckConfig": {
                "$ref": "#/definitions/property_types/aws-properties-route53-healthcheck-healthcheckconfig"
              },
              "HealthCheckTags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-route53-healthcheck-healthchecktags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "HealthCheckConfig"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::HealthCheck"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::HostedZone": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "HostedZoneConfig": {
                "$ref": "#/definitions/property_types/aws-properties-route53-hostedzone-hostedzoneconfig"
              },
              "HostedZoneTags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-route53-hostedzone-hostedzonetags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "VPCs": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-resource-route53-hostedzone-hostedzonevpcs"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::HostedZone"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::RecordSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AliasTarget": {
                "$ref": "#/definitions/property_types/aws-properties-route53-aliastarget"
              },
              "Comment": {
                "$ref": "#/definitions/string"
              },
              "Failover": {
                "$ref": "#/definitions/string"
              },
              "GeoLocation": {
                "$ref": "#/definitions/property_types/aws-properties-route53-recordset-geolocation"
              },
              "HealthCheckId": {
                "$ref": "#/definitions/string"
              },
              "HostedZoneId": {
                "$ref": "#/definitions/string"
              },
              "HostedZoneName": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Region": {
                "description": "<p>Latency resource record sets only: The Amazon EC2 region where the resource that is\n                  specified in this resource record set resides. The resource typically is an AWS\n                  resource, for example, Amazon EC2 instance or an Elastic Load Balancing load balancer, and is referred\n                  to by an IP address or a DNS domain name, depending on the record type.</p><p>When Amazon Route\u00a053 receives a DNS query for a domain name and type for which you have\n                  created latency resource record sets, Amazon Route\u00a053 selects the latency resource record\n                  set that has the lowest latency between the end user and the associated Amazon EC2\n                  region. Amazon Route\u00a053 then returns the value that is associated with the selected resource\n                  record set.</p><p>The following restrictions must be followed:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" type=\"disc\"><li class=\"listitem\"><p>You can only specify one resource record per latency resource record\n                        set.</p></li><li class=\"listitem\"><p>You can only create one latency resource record set for each Amazon EC2\n                        region.</p></li><li class=\"listitem\"><p>You are not required to create latency resource record sets for all Amazon EC2\n                        regions. Amazon Route\u00a053 will choose the region with the best latency from among the\n                        regions for which you create latency resource record sets.</p></li><li class=\"listitem\"><p>You cannot create both weighted and latency resource record sets that\n                        have the same values for the Name and Type elements.</p></li></ul></div><p>To see a list of regions by service, see <a class=\"ulink\" href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\" target=\"_blank\">Regions and Endpoints</a> in the\n                  <em class=\"citetitle\">AWS General Reference</em>.</p>"
              },
              "ResourceRecords": {
                "$ref": "#/definitions/list<string>"
              },
              "SetIdentifier": {
                "$ref": "#/definitions/string"
              },
              "TTL": {
                "$ref": "#/definitions/string"
              },
              "Type": {
                "$ref": "#/definitions/string"
              },
              "Weight": {
                "$ref": "#/definitions/integer"
              }
            },
            "required": [
              "Name",
              "Type"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::RecordSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::Route53::RecordSetGroup": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Comment": {
                "$ref": "#/definitions/string"
              },
              "HostedZoneId": {
                "$ref": "#/definitions/string"
              },
              "HostedZoneName": {
                "$ref": "#/definitions/string"
              },
              "RecordSets": {
                "items": {
                  "$ref": "#/definitions/resource_types/AWS::Route53::RecordSet/properties/Properties"
                },
                "type": "array"
              }
            },
            "required": [
              "RecordSets"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::Route53::RecordSetGroup"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::S3::Bucket": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "AccessControl": {
                "$ref": "#/definitions/string"
              },
              "BucketName": {
                "$ref": "#/definitions/string"
              },
              "CorsConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-cors"
              },
              "LifecycleConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig"
              },
              "LoggingConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-loggingconfig"
              },
              "NotificationConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfig"
              },
              "ReplicationConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-replicationconfiguration"
              },
              "Tags": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-resource-tags"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "VersioningConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-bucket-versioningconfig"
              },
              "WebsiteConfiguration": {
                "$ref": "#/definitions/property_types/aws-properties-s3-websiteconfiguration"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::S3::Bucket"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::S3::BucketPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Bucket": {
                "$ref": "#/definitions/string"
              },
              "PolicyDocument": {
                "type": "object"
              }
            },
            "required": [
              "Bucket",
              "PolicyDocument"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::S3::BucketPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::SDB::Domain": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Description": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SDB::Domain"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SNS::Subscription": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Endpoint": {
                "$ref": "#/definitions/string"
              },
              "Protocol": {
                "$ref": "#/definitions/string"
              },
              "TopicArn": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SNS::Subscription"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SNS::Topic": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DisplayName": {
                "$ref": "#/definitions/string"
              },
              "Subscription": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-sns-subscription"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "TopicName": {
                "$ref": "#/definitions/string"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SNS::Topic"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SNS::TopicPolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "Topics": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "PolicyDocument",
              "Topics"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SNS::TopicPolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::SQS::Queue": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DelaySeconds": {
                "$ref": "#/definitions/integer"
              },
              "MaximumMessageSize": {
                "$ref": "#/definitions/integer"
              },
              "MessageRetentionPeriod": {
                "$ref": "#/definitions/integer"
              },
              "QueueName": {
                "$ref": "#/definitions/string"
              },
              "ReceiveMessageWaitTimeSeconds": {
                "$ref": "#/definitions/integer"
              },
              "RedrivePolicy": {
                "$ref": "#/definitions/property_types/aws-properties-sqs-queues-redrivepolicy"
              },
              "VisibilityTimeout": {
                "$ref": "#/definitions/integer"
              }
            }
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SQS::Queue"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "AWS::SQS::QueuePolicy": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "PolicyDocument": {
                "type": "object"
              },
              "Queues": {
                "$ref": "#/definitions/list<string>"
              }
            },
            "required": [
              "PolicyDocument",
              "Queues"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SQS::QueuePolicy"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::SSM::Document": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Content": {
                "type": "object"
              }
            },
            "required": [
              "Content"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::SSM::Document"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::ByteMatchSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ByteMatchTuples": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-bytematchset-bytematchtuples"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::ByteMatchSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::IPSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "IPSetDescriptors": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-ipset-ipsetdescriptors"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              },
              "Name": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::IPSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::Rule": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "MetricName": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Predicates": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-rule-predicates"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "MetricName",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::Rule"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::SizeConstraintSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/string"
              },
              "SizeConstraints": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-sizeconstraintset-sizeconstraint"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Name",
              "SizeConstraints"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::SizeConstraintSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::SqlInjectionMatchSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/string"
              },
              "SqlInjectionMatchTuples": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::SqlInjectionMatchSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::WebACL": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "DefaultAction": {
                "$ref": "#/definitions/property_types/aws-properties-waf-webacl-action"
              },
              "MetricName": {
                "$ref": "#/definitions/string"
              },
              "Name": {
                "$ref": "#/definitions/string"
              },
              "Rules": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-webacl-rules"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "DefaultAction",
              "MetricName",
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::WebACL"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WAF::XssMatchSet": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "Name": {
                "$ref": "#/definitions/string"
              },
              "XssMatchTuples": {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/property_types/aws-properties-waf-xssmatchset-xssmatchtuple"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            },
            "required": [
              "Name"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WAF::XssMatchSet"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      },
      "AWS::WorkSpaces::Workspace": {
        "type": "object",
        "properties": {
          "Properties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "BundleId": {
                "$ref": "#/definitions/string"
              },
              "DirectoryId": {
                "$ref": "#/definitions/string"
              },
              "UserName": {
                "$ref": "#/definitions/string"
              },
              "RootVolumeEncryptionEnabled": {
                "$ref": "#/definitions/boolean"
              },
              "UserVolumeEncryptionEnabled": {
                "$ref": "#/definitions/boolean"
              },
              "VolumeEncryptionKey": {
                "$ref": "#/definitions/string"
              }
            },
            "required": [
              "BundleId",
              "DirectoryId",
              "UserName"
            ]
          },
          "Type": {
            "type": "string",
            "enum": [
              "AWS::WorkSpaces::Workspace"
            ]
          },
          "DependsOn": {
            "$ref": "#/definitions/attributes/DependsOn"
          },
          "Metadata": {
            "type": "object"
          },
          "DeletionPolicy": {
            "$ref": "#/definitions/attributes/DeletionPolicy"
          },
          "Condition": {
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Properties"
        ],
        "additionalProperties": false
      }
    },
    "property_types": {
      "aws-properties-apitgateway-apikey-stagekey": {
        "title": "Amazon API Gateway ApiKey StageKey",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-apikey-stagekey.html",
        "type": "object",
        "properties": {
          "RestApiId": {
            "$ref": "#/definitions/string"
          },
          "StageName": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-deployment-stagedescription": {
        "title": "Amazon API Gateway Deployment StageDescription",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription.html",
        "type": "object",
        "properties": {
          "CacheClusterEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "CacheClusterSize": {
            "$ref": "#/definitions/string"
          },
          "CacheDataEncrypted": {
            "$ref": "#/definitions/boolean"
          },
          "CacheTtlInSeconds": {
            "$ref": "#/definitions/integer"
          },
          "CachingEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "ClientCertificateId": {
            "$ref": "#/definitions/string"
          },
          "DataTraceEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "Description": {
            "$ref": "#/definitions/string"
          },
          "LoggingLevel": {
            "$ref": "#/definitions/string"
          },
          "MethodSettings": {
            "$ref": "#/definitions/property_types/aws-properties-apitgateway-deployment-stagedescription-methodsetting"
          },
          "MetricsEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "StageName": {
            "$ref": "#/definitions/string"
          },
          "ThrottlingBurstLimit": {
            "$ref": "#/definitions/integer"
          },
          "ThrottlingRateLimit": {
            "$ref": "#/definitions/integer"
          },
          "Variables": {
            "$ref": "#/definitions/key-value-pairs"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-deployment-stagedescription-methodsetting": {
        "title": "Amazon API Gateway Deployment StageDescription MethodSetting",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-deployment-stagedescription-methodsetting.html",
        "type": "object",
        "properties": {
          "CacheDataEncrypted": {
            "$ref": "#/definitions/boolean"
          },
          "CacheTtlInSeconds": {
            "$ref": "#/definitions/integer"
          },
          "CachingEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "DataTraceEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "HttpMethod": {
            "$ref": "#/definitions/string"
          },
          "LoggingLevel": {
            "$ref": "#/definitions/string"
          },
          "MetricsEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "ResourcePath": {
            "$ref": "#/definitions/string"
          },
          "ThrottlingBurstLimit": {
            "$ref": "#/definitions/integer"
          },
          "ThrottlingRateLimit": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-method-integration": {
        "title": "Amazon API Gateway Method Integration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration.html",
        "type": "object",
        "properties": {
          "CacheKeyParameters": {
            "$ref": "#/definitions/list<string>"
          },
          "CacheNamespace": {
            "$ref": "#/definitions/string"
          },
          "Credentials": {
            "$ref": "#/definitions/string"
          },
          "IntegrationHttpMethod": {
            "$ref": "#/definitions/string"
          },
          "IntegrationResponses": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-apitgateway-method-integration-integrationresponse"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "PassthroughBehavior": {
            "$ref": "#/definitions/string"
          },
          "RequestParameters": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "RequestTemplates": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Uri": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-apitgateway-method-integration-integrationresponse": {
        "title": "Amazon API Gateway Method Integration IntegrationResponse",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-integration-integrationresponse.html",
        "type": "object",
        "properties": {
          "ResponseParameters": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "ResponseTemplates": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "SelectionPattern": {
            "$ref": "#/definitions/string"
          },
          "StatusCode": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-method-methodresponse": {
        "title": "Amazon API Gateway Method MethodResponse",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-method-methodresponse.html",
        "type": "object",
        "properties": {
          "ResponseModels": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "ResponseParameters": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "StatusCode": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "StatusCode"
        ],
        "additionalProperties": false
      },
      "aws-properties-apitgateway-restapi-bodys3location": {
        "title": "Amazon API Gateway RestApi S3Location",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-restapi-bodys3location.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/string"
          },
          "ETag": {
            "$ref": "#/definitions/string"
          },
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Version": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apitgateway-stage-methodsetting": {
        "title": "Amazon API Gateway Stage MethodSetting",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apitgateway-stage-methodsetting.html",
        "type": "object",
        "properties": {
          "CacheDataEncrypted": {
            "$ref": "#/definitions/boolean"
          },
          "CacheTtlInSeconds": {
            "$ref": "#/definitions/integer"
          },
          "CachingEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "DataTraceEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "HttpMethod": {
            "$ref": "#/definitions/string"
          },
          "LoggingLevel": {
            "$ref": "#/definitions/string"
          },
          "MetricsEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "ResourcePath": {
            "$ref": "#/definitions/string"
          },
          "ThrottlingBurstLimit": {
            "$ref": "#/definitions/integer"
          },
          "ThrottlingRateLimit": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "HttpMethod",
          "ResourcePath"
        ],
        "additionalProperties": false
      },
      "aws-properties-apigateway-usageplan-apistage": {
        "title": "Amazon API Gateway UsagePlan ApiStage",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html",
        "type": "object",
        "properties": {
          "ApiId": {
            "$ref": "#/definitions/string"
          },
          "Stage": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apigateway-usageplan-quotasettings": {
        "title": "Amazon API Gateway UsagePlan QuotaSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-quotasettings.html",
        "type": "object",
        "properties": {
          "Limit": {
            "$ref": "#/definitions/integer"
          },
          "Offset": {
            "$ref": "#/definitions/integer"
          },
          "Period": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-apigateway-usageplan-throttlesettings": {
        "title": "Amazon API Gateway UsagePlan ThrottleSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-throttlesettings.html",
        "type": "object",
        "properties": {
          "BurstLimit": {
            "$ref": "#/definitions/integer"
          },
          "RateLimit": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration": {
        "title": "Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration.html",
        "type": "object",
        "properties": {
          "AdjustmentType": {
            "$ref": "#/definitions/string"
          },
          "Cooldown": {
            "$ref": "#/definitions/integer"
          },
          "MetricAggregationType": {
            "$ref": "#/definitions/string"
          },
          "MinAdjustmentMagnitude": {
            "$ref": "#/definitions/integer"
          },
          "StepAdjustments": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment": {
        "title": "Application Auto Scaling ScalingPolicy StepScalingPolicyConfiguration StepAdjustment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-applicationautoscaling-scalingpolicy-stepscalingpolicyconfiguration-stepadjustment.html",
        "type": "object",
        "properties": {
          "MetricIntervalLowerBound": {
            "$ref": "#/definitions/integer"
          },
          "MetricIntervalUpperBound": {
            "$ref": "#/definitions/integer"
          },
          "ScalingAdjustment": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "ScalingAdjustment"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-launchconfig-blockdev-mapping": {
        "title": "AWS CloudFormation AutoScaling Block Device Mapping Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html",
        "type": "object",
        "properties": {
          "DeviceName": {
            "$ref": "#/definitions/string"
          },
          "Ebs": {
            "$ref": "#/definitions/property_types/aws-properties-as-launchconfig-blockdev-template"
          },
          "NoDevice": {
            "$ref": "#/definitions/boolean"
          },
          "VirtualName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DeviceName"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-launchconfig-blockdev-template": {
        "title": "AWS CloudFormation AutoScaling EBS Block Device Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html",
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "$ref": "#/definitions/boolean"
          },
          "Encrypted": {
            "$ref": "#/definitions/boolean"
          },
          "Iops": {
            "$ref": "#/definitions/integer"
          },
          "SnapshotId": {
            "$ref": "#/definitions/string"
          },
          "VolumeSize": {
            "$ref": "#/definitions/integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-as-metricscollection": {
        "title": "Auto Scaling MetricsCollection",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html",
        "type": "object",
        "properties": {
          "Granularity": {
            "$ref": "#/definitions/string"
          },
          "Metrics": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "Granularity"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-notificationconfigurations": {
        "title": "Auto Scaling NotificationConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html",
        "type": "object",
        "properties": {
          "NotificationTypes": {
            "$ref": "#/definitions/list<string>"
          },
          "TopicARN": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "NotificationTypes",
          "TopicARN"
        ],
        "additionalProperties": false
      },
      "aws-properties-autoscaling-scalingpolicy-stepadjustments": {
        "title": "Auto Scaling ScalingPolicy StepAdjustments",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html",
        "type": "object",
        "properties": {
          "MetricIntervalLowerBound": {
            "$ref": "#/definitions/integer"
          },
          "MetricIntervalUpperBound": {
            "$ref": "#/definitions/integer"
          },
          "ScalingAdjustment": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "ScalingAdjustment"
        ],
        "additionalProperties": false
      },
      "aws-properties-as-tags": {
        "title": "Auto Scaling Tags Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          },
          "PropagateAtLaunch": {
            "$ref": "#/definitions/boolean"
          }
        },
        "required": [
          "Key",
          "Value",
          "PropagateAtLaunch"
        ],
        "additionalProperties": false
      },
      "aws-properties-certificatemanager-certificate-domainvalidationoption": {
        "title": "AWS Certificate Manager Certificate DomainValidationOption",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-certificatemanager-certificate-domainvalidationoption.html",
        "type": "object",
        "properties": {
          "DomainName": {
            "$ref": "#/definitions/string"
          },
          "ValidationDomain": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DomainName",
          "ValidationDomain"
        ],
        "additionalProperties": false
      },
      "aws-properties-stack-parameters": {
        "title": "CloudFormation Stack Parameters Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack-parameters.html",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "aws-properties-cloudformation-interface-label": {
        "title": "AWS CloudFormation Interface Label",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-label.html",
        "type": "object",
        "properties": {
          "default": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudformation-interface-parametergroup": {
        "title": "AWS CloudFormation Interface ParameterGroup",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parametergroup.html",
        "type": "object",
        "properties": {
          "Label": {
            "$ref": "#/definitions/property_types/aws-properties-cloudformation-interface-label"
          },
          "Parameters": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudformation-interface-parameterlabel": {
        "title": "AWS CloudFormation Interface ParameterLabel",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudformation-interface-parameterlabel.html",
        "type": "object",
        "properties": {
          "ParameterLogicalID": {
            "$ref": "#/definitions/property_types/aws-properties-cloudformation-interface-label"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig": {
        "title": "CloudFront DistributionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig.html",
        "type": "object",
        "properties": {
          "Aliases": {
            "$ref": "#/definitions/list<string>"
          },
          "CacheBehaviors": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-cloudfront-cachebehavior"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Comment": {
            "$ref": "#/definitions/string"
          },
          "CustomErrorResponses": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-cloudfront-distributionconfig-customerrorresponse"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "DefaultCacheBehavior": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-defaultcachebehavior"
          },
          "DefaultRootObject": {
            "$ref": "#/definitions/string"
          },
          "Enabled": {
            "$ref": "#/definitions/boolean"
          },
          "HttpVersion": {
            "$ref": "#/definitions/string"
          },
          "Logging": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-logging"
          },
          "Origins": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-cloudfront-origin"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "PriceClass": {
            "$ref": "#/definitions/string"
          },
          "Restrictions": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-distributionconfig-restrictions"
          },
          "ViewerCertificate": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-distributionconfig-viewercertificate"
          },
          "WebACLId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DefaultCacheBehavior",
          "Enabled",
          "Origins"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-cachebehavior": {
        "title": "CloudFront DistributionConfig CacheBehavior",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-cachebehavior.html",
        "type": "object",
        "properties": {
          "AllowedMethods": {
            "$ref": "#/definitions/list<string>"
          },
          "CachedMethods": {
            "$ref": "#/definitions/list<string>"
          },
          "Compress": {
            "$ref": "#/definitions/boolean"
          },
          "DefaultTTL": {
            "$ref": "#/definitions/integer"
          },
          "ForwardedValues": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-forwardedvalues"
          },
          "MaxTTL": {
            "$ref": "#/definitions/integer"
          },
          "MinTTL": {
            "$ref": "#/definitions/integer"
          },
          "PathPattern": {
            "$ref": "#/definitions/string"
          },
          "SmoothStreaming": {
            "$ref": "#/definitions/boolean"
          },
          "TargetOriginId": {
            "$ref": "#/definitions/string"
          },
          "TrustedSigners": {
            "$ref": "#/definitions/list<string>"
          },
          "ViewerProtocolPolicy": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ForwardedValues",
          "PathPattern",
          "TargetOriginId",
          "ViewerProtocolPolicy"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-customerrorresponse": {
        "title": "CloudFront DistributionConfig CustomErrorResponse",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-customerrorresponse.html",
        "type": "object",
        "properties": {
          "ErrorCachingMinTTL": {
            "$ref": "#/definitions/integer"
          },
          "ErrorCode": {
            "$ref": "#/definitions/integer"
          },
          "ResponseCode": {
            "$ref": "#/definitions/integer"
          },
          "ResponsePagePath": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ErrorCode"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-defaultcachebehavior": {
        "title": "CloudFront DefaultCacheBehavior",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-defaultcachebehavior.html",
        "type": "object",
        "properties": {
          "AllowedMethods": {
            "$ref": "#/definitions/list<string>"
          },
          "CachedMethods": {
            "$ref": "#/definitions/list<string>"
          },
          "Compress": {
            "$ref": "#/definitions/boolean"
          },
          "DefaultTTL": {
            "$ref": "#/definitions/integer"
          },
          "ForwardedValues": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-forwardedvalues"
          },
          "MaxTTL": {
            "$ref": "#/definitions/integer"
          },
          "MinTTL": {
            "$ref": "#/definitions/string"
          },
          "SmoothStreaming": {
            "$ref": "#/definitions/boolean"
          },
          "TargetOriginId": {
            "$ref": "#/definitions/string"
          },
          "TrustedSigners": {
            "$ref": "#/definitions/list<string>"
          },
          "ViewerProtocolPolicy": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ForwardedValues",
          "TargetOriginId",
          "ViewerProtocolPolicy"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-logging": {
        "title": "CloudFront Logging",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-logging.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/string"
          },
          "IncludeCookies": {
            "$ref": "#/definitions/boolean"
          },
          "Prefix": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Bucket"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-origin": {
        "title": "CloudFront DistributionConfig Origin",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin.html",
        "type": "object",
        "properties": {
          "CustomOriginConfig": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-customorigin"
          },
          "DomainName": {
            "$ref": "#/definitions/string"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "OriginCustomHeaders": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-cloudfront-origin-origincustomheader"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "OriginPath": {
            "$ref": "#/definitions/string"
          },
          "S3OriginConfig": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-s3origin"
          }
        },
        "required": [
          "DomainName",
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-customorigin": {
        "title": "CloudFront DistributionConfig Origin CustomOrigin",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-customorigin.html",
        "type": "object",
        "properties": {
          "HTTPPort": {
            "$ref": "#/definitions/string"
          },
          "HTTPSPort": {
            "$ref": "#/definitions/string"
          },
          "OriginProtocolPolicy": {
            "$ref": "#/definitions/string"
          },
          "OriginSSLProtocols": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "OriginProtocolPolicy"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-origin-origincustomheader": {
        "title": "CloudFront DistributionConfig Origin OriginCustomHeader",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-origin-origincustomheader.html",
        "type": "object",
        "properties": {
          "HeaderName": {
            "$ref": "#/definitions/string"
          },
          "HeaderValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "HeaderName",
          "HeaderValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-s3origin": {
        "title": "CloudFront DistributionConfig Origin S3Origin",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-s3origin.html",
        "type": "object",
        "properties": {
          "OriginAccessIdentity": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-restrictions": {
        "title": "CloudFront DistributionConfiguration Restrictions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions.html",
        "type": "object",
        "properties": {
          "GeoRestriction": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-distributionconfig-restrictions-georestriction"
          }
        },
        "required": [
          "GeoRestriction"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-restrictions-georestriction": {
        "title": "CloudFront DistributionConfig Restrictions GeoRestriction",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-restrictions-georestriction.html",
        "type": "object",
        "properties": {
          "Locations": {
            "$ref": "#/definitions/list<string>"
          },
          "RestrictionType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "RestrictionType"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-distributionconfig-viewercertificate": {
        "title": "CloudFront DistributionConfiguration ViewerCertificate",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distributionconfig-viewercertificate.html",
        "type": "object",
        "properties": {
          "AcmCertificateArn": {
            "$ref": "#/definitions/string"
          },
          "CloudFrontDefaultCertificate": {
            "$ref": "#/definitions/boolean"
          },
          "IamCertificateId": {
            "$ref": "#/definitions/string"
          },
          "MinimumProtocolVersion": {
            "$ref": "#/definitions/string"
          },
          "SslSupportMethod": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-cloudfront-forwardedvalues": {
        "title": "CloudFront ForwardedValues",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues.html",
        "type": "object",
        "properties": {
          "Cookies": {
            "$ref": "#/definitions/property_types/aws-properties-cloudfront-forwardedvalues-cookies"
          },
          "Headers": {
            "$ref": "#/definitions/list<string>"
          },
          "QueryString": {
            "$ref": "#/definitions/boolean"
          },
          "QueryStringCacheKeys": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "QueryString"
        ],
        "additionalProperties": false
      },
      "aws-properties-cloudfront-forwardedvalues-cookies": {
        "title": "CloudFront ForwardedValues Cookies",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-forwardedvalues-cookies.html",
        "type": "object",
        "properties": {
          "Forward": {
            "$ref": "#/definitions/string"
          },
          "WhitelistedNames": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "Forward"
        ],
        "additionalProperties": false
      },
      "aws-properties-cw-dimension": {
        "title": "CloudWatch Metric Dimension Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-dimension.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-events-rule-target": {
        "title": "Amazon CloudWatch Events Rule Target",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-events-rule-target.html",
        "type": "object",
        "properties": {
          "Arn": {
            "$ref": "#/definitions/string"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "Input": {
            "$ref": "#/definitions/string"
          },
          "InputPath": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Arn",
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-logs-metricfilter-metrictransformation": {
        "title": "CloudWatch Logs MetricFilter MetricTransformation Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-logs-metricfilter-metrictransformation.html",
        "type": "object",
        "properties": {
          "MetricName": {
            "$ref": "#/definitions/string"
          },
          "MetricNamespace": {
            "$ref": "#/definitions/string"
          },
          "MetricValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "MetricName",
          "MetricNamespace",
          "MetricValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-codecommit-repository-triggers": {
        "title": "AWS CodeCommit Repository Trigger",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-triggers.html",
        "type": "object",
        "properties": {
          "Branches": {
            "$ref": "#/definitions/list<string>"
          },
          "CustomData": {
            "$ref": "#/definitions/string"
          },
          "DestinationArn": {
            "$ref": "#/definitions/string"
          },
          "Events": {
            "$ref": "#/definitions/list<string>"
          },
          "Name": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts": {
        "title": "AWS CodeDeploy DeploymentConfig MinimumHealthyHosts",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html",
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/definitions/string"
          },
          "IgnoreApplicationStopFailures": {
            "$ref": "#/definitions/boolean"
          },
          "Revision": {
            "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-deployment-revision"
          }
        },
        "required": [
          "Revision"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment-revision": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment Revision",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html",
        "type": "object",
        "properties": {
          "GitHubLocation": {
            "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation"
          },
          "RevisionType": {
            "$ref": "#/definitions/string"
          },
          "S3Location": {
            "$ref": "#/definitions/property_types/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment Revision GitHubLocation",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html",
        "type": "object",
        "properties": {
          "CommitId": {
            "$ref": "#/definitions/string"
          },
          "Repository": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "CommitId",
          "Repository"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location": {
        "title": "AWS CodeDeploy DeploymentGroup Deployment Revision S3Location",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/string"
          },
          "BundleType": {
            "$ref": "#/definitions/string"
          },
          "ETag": {
            "$ref": "#/definitions/string"
          },
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Version": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Bucket",
          "BundleType",
          "Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-ec2tagfilters": {
        "title": "AWS CodeDeploy DeploymentGroup Ec2TagFilters",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilters.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters": {
        "title": "AWS CodeDeploy DeploymentGroup OnPremisesInstanceTagFilters",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisesinstancetagfilters.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-resource-codepipeline-customactiontype-artifactdetails": {
        "title": "AWS CodePipeline CustomActionType ArtifactDetails",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-artifactdetails.html",
        "type": "object",
        "properties": {
          "MaximumCount": {
            "$ref": "#/definitions/integer"
          },
          "MinimumCount": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "MaximumCount",
          "MinimumCount"
        ],
        "additionalProperties": false
      },
      "aws-resource-codepipeline-customactiontype-configurationproperties": {
        "title": "AWS CodePipeline CustomActionType ConfigurationProperties",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html",
        "type": "object",
        "properties": {
          "Description": {
            "$ref": "#/definitions/string"
          },
          "Key": {
            "$ref": "#/definitions/boolean"
          },
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Queryable": {
            "$ref": "#/definitions/boolean"
          },
          "Required": {
            "$ref": "#/definitions/boolean"
          },
          "Secret": {
            "$ref": "#/definitions/boolean"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key",
          "Name",
          "Required",
          "Secret"
        ],
        "additionalProperties": false
      },
      "aws-resource-codepipeline-customactiontype-settings": {
        "title": "AWS CodePipeline CustomActionType Settings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-settings.html",
        "type": "object",
        "properties": {
          "EntityUrlTemplate": {
            "$ref": "#/definitions/string"
          },
          "ExecutionUrlTemplate": {
            "$ref": "#/definitions/string"
          },
          "RevisionUrlTemplate": {
            "$ref": "#/definitions/string"
          },
          "ThirdPartyConfigurationUrl": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-artifactstore": {
        "title": "AWS CodePipeline Pipeline ArtifactStore",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html",
        "type": "object",
        "properties": {
          "EncryptionKey": {
            "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey"
          },
          "Location": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Location",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-artifactstore-encryptionkey": {
        "title": "AWS CodePipeline Pipeline ArtifactStore EncryptionKey",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html",
        "type": "object",
        "properties": {
          "Id": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Id",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-disableinboundstagetransitions": {
        "title": "AWS CodePipeline Pipeline DisableInboundStageTransitions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html",
        "type": "object",
        "properties": {
          "Reason": {
            "$ref": "#/definitions/string"
          },
          "StageName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Reason",
          "StageName"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages": {
        "title": "AWS CodePipeline Pipeline Stages",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html",
        "type": "object",
        "properties": {
          "Actions": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages-actions"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Blockers": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages-blockers"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Name": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Actions",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions": {
        "title": "AWS CodePipeline Pipeline Stages Actions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html",
        "type": "object",
        "properties": {
          "ActionTypeId": {
            "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid"
          },
          "Configuration": {
            "type": "object"
          },
          "InputArtifacts": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Name": {
            "$ref": "#/definitions/string"
          },
          "OutputArtifacts": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "RunOrder": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "ActionTypeId",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions-actiontypeid": {
        "title": "AWS CodePipeline Pipeline Stages Actions ActionTypeId",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html",
        "type": "object",
        "properties": {
          "Category": {
            "$ref": "#/definitions/string"
          },
          "Owner": {
            "$ref": "#/definitions/string"
          },
          "Provider": {
            "$ref": "#/definitions/string"
          },
          "Version": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Category",
          "Owner",
          "Provider",
          "Version"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions-inputartifacts": {
        "title": "AWS CodePipeline Pipeline Stages Actions InputArtifacts",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-actions-outputartifacts": {
        "title": "AWS CodePipeline Pipeline Stages Actions OutputArtifacts",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-codepipeline-pipeline-stages-blockers": {
        "title": "AWS CodePipeline Pipeline Stages Blockers",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Name",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-config-configrule-scope": {
        "title": "AWS Config ConfigRule Scope",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-scope.html",
        "type": "object",
        "properties": {
          "ComplianceResourceId": {
            "$ref": "#/definitions/string"
          },
          "ComplianceResourceTypes": {
            "$ref": "#/definitions/list<string>"
          },
          "TagKey": {
            "$ref": "#/definitions/string"
          },
          "TagValue": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-config-configrule-source": {
        "title": "AWS Config ConfigRule Source",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source.html",
        "type": "object",
        "properties": {
          "Owner": {
            "$ref": "#/definitions/string"
          },
          "SourceDetails": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-config-configrule-source-sourcedetails"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "SourceIdentifier": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Owner",
          "SourceIdentifier"
        ],
        "additionalProperties": false
      },
      "aws-properties-config-configrule-source-sourcedetails": {
        "title": "AWS Config ConfigRule Source SourceDetails",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configrule-source-sourcedetails.html",
        "type": "object",
        "properties": {
          "EventSource": {
            "$ref": "#/definitions/string"
          },
          "MessageType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "EventSource",
          "MessageType"
        ],
        "additionalProperties": false
      },
      "aws-properties-config-configurationrecorder-recordinggroup": {
        "title": "AWS Config ConfigurationRecorder RecordingGroup",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordinggroup.html",
        "type": "object",
        "properties": {
          "AllSupported": {
            "$ref": "#/definitions/boolean"
          },
          "IncludeGlobalResourceTypes": {
            "$ref": "#/definitions/boolean"
          },
          "ResourceTypes": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-config-deliverychannel-configsnapshotdeliveryproperties": {
        "title": "AWS Config DeliveryChannel ConfigSnapshotDeliveryProperties",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-deliverychannel-configsnapshotdeliveryproperties.html",
        "type": "object",
        "properties": {
          "DeliveryFrequency": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-parameterobjects": {
        "title": "AWS Data Pipeline Pipeline ParameterObjects",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects.html",
        "type": "object",
        "properties": {
          "Attributes": {
            "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-parameterobjects-attributes"
          },
          "Id": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Attributes",
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-parameterobjects-attributes": {
        "title": "AWS Data Pipeline Parameter Objects Attributes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parameterobjects-attributes.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "StringValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-parametervalues": {
        "title": "AWS Data Pipeline Pipeline ParameterValues",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-parametervalues.html",
        "type": "object",
        "properties": {
          "Id": {
            "$ref": "#/definitions/string"
          },
          "StringValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Id",
          "StringValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-pipelineobjects": {
        "title": "AWS Data Pipeline PipelineObjects",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects.html",
        "type": "object",
        "properties": {
          "Fields": {
            "$ref": "#/definitions/property_types/aws-properties-datapipeline-pipeline-pipelineobjects-fields"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "Name": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Fields",
          "Id",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-pipelineobjects-fields": {
        "title": "AWS Data Pipeline Data Pipeline Object Fields",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelineobjects-fields.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "RefValue": {
            "$ref": "#/definitions/string"
          },
          "StringValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-datapipeline-pipeline-pipelinetags": {
        "title": "AWS Data Pipeline Pipeline PipelineTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datapipeline-pipeline-pipelinetags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-directoryservice-microsoftad-vpcsettings": {
        "title": "AWS Directory Service MicrosoftAD VpcSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-microsoftad-vpcsettings.html",
        "type": "object",
        "properties": {
          "SubnetIds": {
            "$ref": "#/definitions/list<string>"
          },
          "VpcId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "SubnetIds",
          "VpcId"
        ],
        "additionalProperties": false
      },
      "aws-properties-directoryservice-simplead-vpcsettings": {
        "title": "AWS Directory Service SimpleAD VpcSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-directoryservice-simplead-vpcsettings.html",
        "type": "object",
        "properties": {
          "SubnetIds": {
            "$ref": "#/definitions/list<string>"
          },
          "VpcId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "SubnetIds",
          "VpcId"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-attributedef": {
        "title": "DynamoDB Attribute Definitions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-attributedef.html",
        "type": "object",
        "properties": {
          "AttributeName": {
            "$ref": "#/definitions/string"
          },
          "AttributeType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "AttributeName",
          "AttributeType"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-gsi": {
        "title": "DynamoDB Global Secondary Indexes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-gsi.html",
        "type": "object",
        "properties": {
          "IndexName": {
            "$ref": "#/definitions/string"
          },
          "KeySchema": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-dynamodb-keyschema"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Projection": {
            "$ref": "#/definitions/property_types/aws-properties-dynamodb-projectionobject"
          },
          "ProvisionedThroughput": {
            "$ref": "#/definitions/property_types/aws-properties-dynamodb-provisionedthroughput"
          }
        },
        "required": [
          "IndexName",
          "KeySchema",
          "Projection",
          "ProvisionedThroughput"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-keyschema": {
        "title": "DynamoDB Key Schema",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-keyschema.html",
        "type": "object",
        "properties": {
          "AttributeName": {
            "$ref": "#/definitions/string"
          },
          "KeyType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "AttributeName",
          "KeyType"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-lsi": {
        "title": "DynamoDB Local Secondary Indexes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-lsi.html",
        "type": "object",
        "properties": {
          "IndexName": {
            "$ref": "#/definitions/string"
          },
          "KeySchema": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-dynamodb-keyschema"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Projection": {
            "$ref": "#/definitions/property_types/aws-properties-dynamodb-projectionobject"
          }
        },
        "required": [
          "IndexName",
          "KeySchema",
          "Projection"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-projectionobject": {
        "title": "DynamoDB Projection Object",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html",
        "type": "object",
        "properties": {
          "NonKeyAttributes": {
            "$ref": "#/definitions/list<string>"
          },
          "ProjectionType": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-dynamodb-provisionedthroughput": {
        "title": "DynamoDB Provisioned Throughput",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-provisionedthroughput.html",
        "type": "object",
        "properties": {
          "ReadCapacityUnits": {
            "$ref": "#/definitions/integer"
          },
          "WriteCapacityUnits": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "ReadCapacityUnits",
          "WriteCapacityUnits"
        ],
        "additionalProperties": false
      },
      "aws-properties-dynamodb-streamspecification": {
        "title": "DynamoDB Table StreamSpecification",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html",
        "type": "object",
        "properties": {
          "StreamViewType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "StreamViewType"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-blockdev-mapping": {
        "title": "Amazon EC2 Block Device Mapping Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-mapping.html",
        "type": "object",
        "properties": {
          "DeviceName": {
            "$ref": "#/definitions/string"
          },
          "Ebs": {
            "$ref": "#/definitions/property_types/aws-properties-ec2-blockdev-template"
          },
          "NoDevice": {
            "description": "<p>This property can be used to unmap a defined device.</p><p><span class=\"emphasis\"><em>Required</em></span>: No</p><p><span class=\"emphasis\"><em>Type</em></span>: an empty map: {}.</p>"
          },
          "VirtualName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DeviceName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-blockdev-template": {
        "title": "Amazon Elastic Block Store Block Device Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-blockdev-template.html",
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "$ref": "#/definitions/boolean"
          },
          "Encrypted": {
            "$ref": "#/definitions/boolean"
          },
          "Iops": {
            "$ref": "#/definitions/integer"
          },
          "SnapshotId": {
            "$ref": "#/definitions/string"
          },
          "VolumeSize": {
            "$ref": "#/definitions/string"
          },
          "VolumeType": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-instance-ssmassociations": {
        "title": "Amazon EC2 Instance SsmAssociations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations.html",
        "type": "object",
        "properties": {
          "AssociationParameters": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-instance-ssmassociations-associationparameters"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "DocumentName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DocumentName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-instance-ssmassociations-associationparameters": {
        "title": "Amazon EC2 Instance SsmAssociations AssociationParameters",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance-ssmassociations-associationparameters.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-mount-point": {
        "title": "EC2 MountPoint Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-mount-point.html",
        "type": "object",
        "properties": {
          "Device": {
            "$ref": "#/definitions/string"
          },
          "VolumeId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Device",
          "VolumeId"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-network-iface-embedded": {
        "title": "EC2 NetworkInterface Embedded Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-iface-embedded.html",
        "type": "object",
        "properties": {
          "AssociatePublicIpAddress": {
            "$ref": "#/definitions/boolean"
          },
          "DeleteOnTermination": {
            "$ref": "#/definitions/boolean"
          },
          "Description": {
            "$ref": "#/definitions/string"
          },
          "DeviceIndex": {
            "$ref": "#/definitions/string"
          },
          "GroupSet": {
            "$ref": "#/definitions/list<string>"
          },
          "NetworkInterfaceId": {
            "$ref": "#/definitions/string"
          },
          "PrivateIpAddress": {
            "$ref": "#/definitions/string"
          },
          "PrivateIpAddresses": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-network-interface-privateipspec"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "SecondaryPrivateIpAddressCount": {
            "$ref": "#/definitions/integer"
          },
          "SubnetId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DeviceIndex"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-networkaclentry-icmp": {
        "title": "EC2 NetworkAclEntry Icmp",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-icmp.html",
        "type": "object",
        "properties": {
          "Code": {
            "$ref": "#/definitions/integer"
          },
          "Type": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-networkaclentry-portrange": {
        "title": "EC2 NetworkAclEntry PortRange",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkaclentry-portrange.html",
        "type": "object",
        "properties": {
          "From": {
            "$ref": "#/definitions/integer"
          },
          "To": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-network-interface-privateipspec": {
        "title": "EC2 Network Interface Private IP Specification",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-network-interface-privateipspec.html",
        "type": "object",
        "properties": {
          "PrivateIpAddress": {
            "$ref": "#/definitions/string"
          },
          "Primary": {
            "$ref": "#/definitions/boolean"
          }
        },
        "required": [
          "PrivateIpAddress",
          "Primary"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-security-group-rule": {
        "title": "EC2 Security Group Rule Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group-rule.html",
        "type": "object",
        "properties": {
          "CidrIp": {
            "$ref": "#/definitions/string"
          },
          "DestinationPrefixListId": {
            "$ref": "#/definitions/string"
          },
          "DestinationSecurityGroupId": {
            "$ref": "#/definitions/string"
          },
          "FromPort": {
            "$ref": "#/definitions/integer"
          },
          "IpProtocol": {
            "$ref": "#/definitions/string"
          },
          "SourceSecurityGroupId": {
            "$ref": "#/definitions/string"
          },
          "SourceSecurityGroupName": {
            "$ref": "#/definitions/string"
          },
          "SourceSecurityGroupOwnerId": {
            "$ref": "#/definitions/string"
          },
          "ToPort": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "IpProtocol"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata": {
        "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html",
        "type": "object",
        "properties": {
          "AllocationStrategy": {
            "$ref": "#/definitions/string"
          },
          "ExcessCapacityTerminationPolicy": {
            "$ref": "#/definitions/string"
          },
          "IamFleetRole": {
            "$ref": "#/definitions/string"
          },
          "LaunchSpecifications": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "SpotPrice": {
            "$ref": "#/definitions/string"
          },
          "TargetCapacity": {
            "$ref": "#/definitions/integer"
          },
          "TerminateInstancesWithExpiration": {
            "$ref": "#/definitions/boolean"
          },
          "ValidFrom": {
            "$ref": "#/definitions/string"
          },
          "ValidUntil": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "IamFleetRole",
          "LaunchSpecifications",
          "SpotPrice",
          "TargetCapacity"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html",
        "type": "object",
        "properties": {
          "BlockDeviceMappings": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "EbsOptimized": {
            "$ref": "#/definitions/boolean"
          },
          "IamInstanceProfile": {
            "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile"
          },
          "ImageId": {
            "$ref": "#/definitions/string"
          },
          "InstanceType": {
            "$ref": "#/definitions/string"
          },
          "KernelId": {
            "$ref": "#/definitions/string"
          },
          "KeyName": {
            "$ref": "#/definitions/string"
          },
          "Monitoring": {
            "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring"
          },
          "NetworkInterfaces": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Placement": {
            "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement"
          },
          "RamdiskId": {
            "$ref": "#/definitions/string"
          },
          "SecurityGroups": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "SpotPrice": {
            "$ref": "#/definitions/string"
          },
          "SubnetId": {
            "$ref": "#/definitions/string"
          },
          "UserData": {
            "$ref": "#/definitions/string"
          },
          "WeightedCapacity": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "ImageId",
          "InstanceType"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings.html",
        "type": "object",
        "properties": {
          "DeviceName": {
            "$ref": "#/definitions/string"
          },
          "Ebs": {
            "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs"
          },
          "NoDevice": {
            "$ref": "#/definitions/boolean"
          },
          "VirtualName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DeviceName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications BlockDeviceMappings Ebs",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-blockdevicemappings-ebs.html",
        "type": "object",
        "properties": {
          "DeleteOnTermination": {
            "$ref": "#/definitions/boolean"
          },
          "Encrypted": {
            "$ref": "#/definitions/boolean"
          },
          "Iops": {
            "$ref": "#/definitions/integer"
          },
          "SnapshotId": {
            "$ref": "#/definitions/string"
          },
          "VolumeSize": {
            "$ref": "#/definitions/integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications IamInstanceProfile",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-iaminstanceprofile.html",
        "type": "object",
        "properties": {
          "Arn": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring": {
        "title": "Amazon EC2 SpotFleet SpotFleetRequestConfigData LaunchSpecifications Monitoring",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-monitoring.html",
        "type": "object",
        "properties": {
          "Enabled": {
            "$ref": "#/definitions/boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces.html",
        "type": "object",
        "properties": {
          "AssociatePublicIpAddress": {
            "$ref": "#/definitions/boolean"
          },
          "DeleteOnTermination": {
            "$ref": "#/definitions/boolean"
          },
          "Description": {
            "$ref": "#/definitions/string"
          },
          "DeviceIndex": {
            "$ref": "#/definitions/integer"
          },
          "Groups": {
            "$ref": "#/definitions/list<string>"
          },
          "NetworkInterfaceId": {
            "$ref": "#/definitions/string"
          },
          "PrivateIpAddresses": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "SecondaryPrivateIpAddressCount": {
            "$ref": "#/definitions/integer"
          },
          "SubnetId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DeviceIndex"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications NetworkInterfaces PrivateIpAddresses",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces-privateipaddresses.html",
        "type": "object",
        "properties": {
          "Primary": {
            "$ref": "#/definitions/boolean"
          },
          "PrivateIpAddress": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "PrivateIpAddress"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications Placement",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-placement.html",
        "type": "object",
        "properties": {
          "AvailabilityZone": {
            "$ref": "#/definitions/string"
          },
          "GroupName": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups": {
        "title": "Amazon Elastic Compute Cloud SpotFleet SpotFleetRequestConfigData LaunchSpecifications SecurityGroups",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-securitygroups.html",
        "type": "object",
        "properties": {
          "GroupId": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ecs-service-deploymentconfiguration": {
        "title": "Amazon EC2 Container Service Service DeploymentConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-deploymentconfiguration.html",
        "type": "object",
        "properties": {
          "MaximumPercent": {
            "$ref": "#/definitions/integer"
          },
          "MinimumHealthyPercent": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ecs-service-loadbalancers": {
        "title": "Amazon EC2 Container Service Service LoadBalancers",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-service-loadbalancers.html",
        "type": "object",
        "properties": {
          "ContainerName": {
            "$ref": "#/definitions/string"
          },
          "ContainerPort": {
            "$ref": "#/definitions/integer"
          },
          "LoadBalancerName": {
            "$ref": "#/definitions/string"
          },
          "TargetGroupArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ContainerName",
          "ContainerPort"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions.html",
        "type": "object",
        "properties": {
          "Command": {
            "$ref": "#/definitions/list<string>"
          },
          "Cpu": {
            "$ref": "#/definitions/integer"
          },
          "DisableNetworking": {
            "$ref": "#/definitions/boolean"
          },
          "DnsSearchDomains": {
            "$ref": "#/definitions/list<string>"
          },
          "DnsServers": {
            "$ref": "#/definitions/list<string>"
          },
          "DockerLabels": {
            "$ref": "#/definitions/key-value-pairs"
          },
          "DockerSecurityOptions": {
            "$ref": "#/definitions/list<string>"
          },
          "EntryPoint": {
            "$ref": "#/definitions/list<string>"
          },
          "Environment": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-environment"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Essential": {
            "$ref": "#/definitions/boolean"
          },
          "ExtraHosts": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Hostname": {
            "$ref": "#/definitions/string"
          },
          "Image": {
            "$ref": "#/definitions/string"
          },
          "Links": {
            "$ref": "#/definitions/list<string>"
          },
          "LogConfiguration": {
            "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration"
          },
          "Memory": {
            "$ref": "#/definitions/integer"
          },
          "MountPoints": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Name": {
            "$ref": "#/definitions/string"
          },
          "PortMappings": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Privileged": {
            "$ref": "#/definitions/boolean"
          },
          "ReadonlyRootFilesystem": {
            "$ref": "#/definitions/boolean"
          },
          "Ulimits": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "User": {
            "$ref": "#/definitions/string"
          },
          "VolumesFrom": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "WorkingDirectory": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Image",
          "Memory",
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-environment": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Environment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-environment.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-hostentry": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions HostEntry",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-hostentry.html",
        "type": "object",
        "properties": {
          "Hostname": {
            "$ref": "#/definitions/string"
          },
          "IpAddress": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Hostname",
          "IpAddress"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions LogConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-logconfiguration.html",
        "type": "object",
        "properties": {
          "LogDriver": {
            "$ref": "#/definitions/string"
          },
          "Options": {
            "$ref": "#/definitions/key-value-pairs"
          }
        },
        "required": [
          "LogDriver"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions MountPoints",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-mountpoints.html",
        "type": "object",
        "properties": {
          "ContainerPath": {
            "$ref": "#/definitions/string"
          },
          "SourceVolume": {
            "$ref": "#/definitions/string"
          },
          "ReadOnly": {
            "$ref": "#/definitions/boolean"
          }
        },
        "required": [
          "ContainerPath",
          "SourceVolume"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-portmappings": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions PortMappings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-portmappings.html",
        "type": "object",
        "properties": {
          "ContainerPort": {
            "$ref": "#/definitions/integer"
          },
          "HostPort": {
            "$ref": "#/definitions/integer"
          },
          "Protocol": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ContainerPort"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-ulimit": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions Ulimit",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-ulimit.html",
        "type": "object",
        "properties": {
          "HardLimit": {
            "$ref": "#/definitions/integer"
          },
          "Name": {
            "$ref": "#/definitions/string"
          },
          "SoftLimit": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "HardLimit",
          "SoftLimit"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom": {
        "title": "Amazon EC2 Container Service TaskDefinition ContainerDefinitions VolumesFrom",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinitions-volumesfrom.html",
        "type": "object",
        "properties": {
          "SourceContainer": {
            "$ref": "#/definitions/string"
          },
          "ReadOnly": {
            "$ref": "#/definitions/boolean"
          }
        },
        "required": [
          "SourceContainer"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-volumes": {
        "title": "Amazon EC2 Container Service TaskDefinition Volumes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Host": {
            "$ref": "#/definitions/property_types/aws-properties-ecs-taskdefinition-volumes-host"
          }
        },
        "required": [
          "Name"
        ],
        "additionalProperties": false
      },
      "aws-properties-ecs-taskdefinition-volumes-host": {
        "title": "Amazon EC2 Container Service TaskDefinition Volumes Host",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-volumes-host.html",
        "type": "object",
        "properties": {
          "SourcePath": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-efs-filesystem-filesystemtags": {
        "title": "Amazon Elastic File System FileSystem FileSystemTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-efs-filesystem-filesystemtags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-beanstalk-environment-tier": {
        "title": "Elastic Beanstalk Environment Tier Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment-tier.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Version": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-beanstalk-option-settings": {
        "title": "Elastic Beanstalk OptionSettings Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-option-settings.html",
        "type": "object",
        "properties": {
          "Namespace": {
            "$ref": "#/definitions/string"
          },
          "OptionName": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Namespace",
          "OptionName",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-beanstalk-sourcebundle": {
        "title": "Elastic Beanstalk SourceBundle Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-sourcebundle.html",
        "type": "object",
        "properties": {
          "S3Bucket": {
            "$ref": "#/definitions/string"
          },
          "S3Key": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "S3Bucket",
          "S3Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-beanstalk-configurationtemplate-sourceconfiguration": {
        "title": "Elastic Beanstalk SourceConfiguration Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-configurationtemplate-sourceconfiguration.html",
        "type": "object",
        "properties": {
          "ApplicationName": {
            "$ref": "#/definitions/string"
          },
          "TemplateName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ApplicationName",
          "TemplateName"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticache-replicationgroup-nodegroupconfiguration": {
        "title": "Amazon ElastiCache ReplicationGroup NodeGroupConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html",
        "type": "object",
        "properties": {
          "PrimaryAvailabilityZone": {
            "$ref": "#/definitions/string"
          },
          "ReplicaAvailabilityZones": {
            "$ref": "#/definitions/list<string>"
          },
          "ReplicaCount": {
            "$ref": "#/definitions/integer"
          },
          "Slots": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-accessloggingpolicy": {
        "title": "Elastic Load Balancing AccessLoggingPolicy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-accessloggingpolicy.html",
        "type": "object",
        "properties": {
          "EmitInterval": {
            "$ref": "#/definitions/integer"
          },
          "Enabled": {
            "$ref": "#/definitions/boolean"
          },
          "S3BucketName": {
            "$ref": "#/definitions/string"
          },
          "S3BucketPrefix": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Enabled",
          "S3BucketName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-AppCookieStickinessPolicy": {
        "title": "ElasticLoadBalancing AppCookieStickinessPolicy Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-AppCookieStickinessPolicy.html",
        "type": "object",
        "properties": {
          "CookieName": {
            "$ref": "#/definitions/string"
          },
          "PolicyName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "CookieName",
          "PolicyName"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-connectiondrainingpolicy": {
        "title": "Elastic Load Balancing ConnectionDrainingPolicy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectiondrainingpolicy.html",
        "type": "object",
        "properties": {
          "Enabled": {
            "$ref": "#/definitions/boolean"
          },
          "Timeout": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "Enabled"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-connectionsettings": {
        "title": "Elastic Load Balancing ConnectionSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-connectionsettings.html",
        "type": "object",
        "properties": {
          "IdleTimeout": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "IdleTimeout"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-health-check": {
        "title": "ElasticLoadBalancing HealthCheck Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-health-check.html",
        "type": "object",
        "properties": {
          "HealthyThreshold": {
            "$ref": "#/definitions/string"
          },
          "Interval": {
            "$ref": "#/definitions/string"
          },
          "Target": {
            "$ref": "#/definitions/string"
          },
          "Timeout": {
            "$ref": "#/definitions/string"
          },
          "UnhealthyThreshold": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "HealthyThreshold",
          "Interval",
          "Target",
          "Timeout",
          "UnhealthyThreshold"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-LBCookieStickinessPolicy": {
        "title": "ElasticLoadBalancing LBCookieStickinessPolicy Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-LBCookieStickinessPolicy.html",
        "type": "object",
        "properties": {
          "CookieExpirationPeriod": {
            "$ref": "#/definitions/string"
          },
          "PolicyName": {
            "description": "<p>The name of the policy being created. The name must be unique within the set of\n                  policies for this load balancer.</p><div class=\"aws-note\"><p class=\"aws-note\">Note</p><p>To associate this policy with a listener, include the policy name in the\n                     listener's <a class=\"link\" href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html\" title=\"ElasticLoadBalancing Listener Property Type\">PolicyNames</a>\n                     property.</p></div>"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-listener": {
        "title": "ElasticLoadBalancing Listener Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-listener.html",
        "type": "object",
        "properties": {
          "InstancePort": {
            "$ref": "#/definitions/string"
          },
          "InstanceProtocol": {
            "$ref": "#/definitions/string"
          },
          "LoadBalancerPort": {
            "$ref": "#/definitions/string"
          },
          "PolicyNames": {
            "$ref": "#/definitions/list<string>"
          },
          "Protocol": {
            "$ref": "#/definitions/string"
          },
          "SSLCertificateId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "InstancePort",
          "LoadBalancerPort",
          "Protocol"
        ],
        "additionalProperties": false
      },
      "aws-properties-ec2-elb-policy": {
        "title": "ElasticLoadBalancing Policy Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb-policy.html",
        "type": "object",
        "properties": {
          "Attributes": {
            "description": "<p>A list of arbitrary attributes for this policy. If you don't need to specify\n                  any policy attributes, specify an empty list (<code class=\"code\">[]</code>).</p><p><span class=\"emphasis\"><em>Required</em></span>: Yes</p><p><span class=\"emphasis\"><em>Type</em></span>: List of JSON name-value pairs.</p>"
          },
          "InstancePorts": {
            "description": "<p>A list of instance ports for the policy. These are the ports associated with the back-end\n                  server.</p><p><span class=\"emphasis\"><em>Required</em></span>: No</p><p><span class=\"emphasis\"><em>Type</em></span>: List of String</p>"
          },
          "LoadBalancerPorts": {
            "description": "<p>A list of external load balancer ports for the policy.</p><p><span class=\"emphasis\"><em>Required</em></span>: Only for some policies. For more information,\n                  see the <em class=\"citetitle\"><a class=\"ulink\" href=\"http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/Welcome.html\" target=\"_blank\">Elastic Load Balancing\n                        Developer Guide</a></em>.</p><p><span class=\"emphasis\"><em>Type</em></span>: List of String</p>"
          },
          "PolicyName": {
            "$ref": "#/definitions/string"
          },
          "PolicyType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Attributes",
          "PolicyName",
          "PolicyType"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listener-certificates": {
        "title": "Elastic Load Balancing Listener Certificates",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-certificates.html",
        "type": "object",
        "properties": {
          "CertificateArn": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listener-defaultactions": {
        "title": "Elastic Load Balancing Listener DefaultActions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listener-defaultactions.html",
        "type": "object",
        "properties": {
          "TargetGroupArn": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "TargetGroupArn",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listenerrule-actions": {
        "title": "Elastic Load Balancing ListenerRule Actions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-actions.html",
        "type": "object",
        "properties": {
          "TargetGroupArn": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "TargetGroupArn",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-listenerrule-conditions": {
        "title": "Elastic Load Balancing ListenerRule Conditions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-listenerrule-conditions.html",
        "type": "object",
        "properties": {
          "Field": {
            "$ref": "#/definitions/string"
          },
          "Values": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes": {
        "title": "Elastic Load Balancing LoadBalancer LoadBalancerAttributes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-targetgroup-matcher": {
        "title": "Elastic Load Balancing TargetGroup Matcher",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-matcher.html",
        "type": "object",
        "properties": {
          "HttpCode": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-targetgroup-targetdescription": {
        "title": "Elastic Load Balancing TargetGroup TargetDescription",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetdescription.html",
        "type": "object",
        "properties": {
          "Id": {
            "$ref": "#/definitions/string"
          },
          "Port": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "Id"
        ],
        "additionalProperties": false
      },
      "aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes": {
        "title": "Elastic Load Balancing TargetGroup TargetGroupAttributes",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-targetgroup-targetgroupattributes.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticsearch-domain-ebsoptions": {
        "title": "Amazon Elasticsearch Service Domain EBSOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-ebsoptions.html",
        "type": "object",
        "properties": {
          "EBSEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "Iops": {
            "$ref": "#/definitions/integer"
          },
          "VolumeSize": {
            "$ref": "#/definitions/integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticsearch-domain-elasticsearchclusterconfig": {
        "title": "Amazon Elasticsearch Service Domain ElasticsearchClusterConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-elasticsearchclusterconfig.html",
        "type": "object",
        "properties": {
          "DedicatedMasterCount": {
            "$ref": "#/definitions/integer"
          },
          "DedicatedMasterEnabled": {
            "$ref": "#/definitions/boolean"
          },
          "DedicatedMasterType": {
            "$ref": "#/definitions/string"
          },
          "InstanceCount": {
            "$ref": "#/definitions/integer"
          },
          "InstanceType": {
            "$ref": "#/definitions/string"
          },
          "ZoneAwarenessEnabled": {
            "$ref": "#/definitions/boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-elasticsearch-domain-snapshotoptions": {
        "title": "Amazon Elasticsearch Service Domain SnapshotOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticsearch-domain-snapshotoptions.html",
        "type": "object",
        "properties": {
          "AutomatedSnapshotStartHour": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-application": {
        "title": "Amazon EMR Cluster Application",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-application.html",
        "type": "object",
        "properties": {
          "AdditionalInfo": {
            "$ref": "#/definitions/string"
          },
          "Args": {
            "$ref": "#/definitions/list<string>"
          },
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Version": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-bootstrapactionconfig": {
        "title": "Amazon EMR Cluster BootstrapActionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "ScriptBootstrapAction": {
            "$ref": "#/definitions/property_types/aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig"
          }
        },
        "required": [
          "Name",
          "ScriptBootstrapAction"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig": {
        "title": "Amazon EMR Cluster BootstrapActionConfig ScriptBootstrapActionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-bootstrapactionconfig-scriptbootstrapactionconfig.html",
        "type": "object",
        "properties": {
          "Args": {
            "$ref": "#/definitions/list<string>"
          },
          "Path": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Path"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-configuration": {
        "title": "Amazon EMR Cluster Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-configuration.html",
        "type": "object",
        "properties": {
          "Classification": {
            "$ref": "#/definitions/string"
          },
          "ConfigurationProperties": {
            "$ref": "#/definitions/string"
          },
          "Configurations": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-emr-cluster-configuration"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-jobflowinstancesconfig": {
        "title": "Amazon EMR Cluster JobFlowInstancesConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig.html",
        "type": "object",
        "properties": {
          "AdditionalMasterSecurityGroups": {
            "$ref": "#/definitions/list<string>"
          },
          "AdditionalSlaveSecurityGroups": {
            "$ref": "#/definitions/list<string>"
          },
          "CoreInstanceGroup": {
            "$ref": "#/definitions/property_types/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig"
          },
          "Ec2KeyName": {
            "$ref": "#/definitions/string"
          },
          "Ec2SubnetId": {
            "$ref": "#/definitions/string"
          },
          "EmrManagedMasterSecurityGroup": {
            "$ref": "#/definitions/string"
          },
          "EmrManagedSlaveSecurityGroup": {
            "$ref": "#/definitions/string"
          },
          "HadoopVersion": {
            "$ref": "#/definitions/string"
          },
          "MasterInstanceGroup": {
            "$ref": "#/definitions/property_types/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig"
          },
          "Placement": {
            "$ref": "#/definitions/property_types/aws-properties-emr-cluster-jobflowinstancesconfig-placementtype"
          },
          "ServiceAccessSecurityGroup": {
            "$ref": "#/definitions/string"
          },
          "TerminationProtected": {
            "$ref": "#/definitions/boolean"
          }
        },
        "required": [
          "CoreInstanceGroup",
          "MasterInstanceGroup"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig": {
        "title": "Amazon EMR Cluster JobFlowInstancesConfig InstanceGroupConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-instancegroupconfig.html",
        "type": "object",
        "properties": {
          "BidPrice": {
            "$ref": "#/definitions/string"
          },
          "Configurations": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-emr-cluster-configuration"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "EbsConfiguration": {
            "$ref": "#/definitions/property_types/aws-properties-emr-ebsconfiguration"
          },
          "InstanceCount": {
            "$ref": "#/definitions/integer"
          },
          "InstanceType": {
            "$ref": "#/definitions/string"
          },
          "Market": {
            "$ref": "#/definitions/string"
          },
          "Name": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "InstanceCount",
          "InstanceType"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-cluster-jobflowinstancesconfig-placementtype": {
        "title": "Amazon EMR Cluster JobFlowInstancesConfig PlacementType",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-cluster-jobflowinstancesconfig-placementtype.html",
        "type": "object",
        "properties": {
          "AvailabilityZone": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "AvailabilityZone"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-ebsconfiguration": {
        "title": "Amazon EMR EbsConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration.html",
        "type": "object",
        "properties": {
          "EbsBlockDeviceConfigs": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "EbsOptimized": {
            "$ref": "#/definitions/boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig": {
        "title": "Amazon EMR EbsConfiguration EbsBlockDeviceConfigs",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig.html",
        "type": "object",
        "properties": {
          "VolumeSpecification": {
            "$ref": "#/definitions/property_types/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification"
          },
          "VolumesPerInstance": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "VolumeSpecification"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification": {
        "title": "Amazon EMR EbsConfiguration EbsBlockDeviceConfig VolumeSpecification",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-ebsconfiguration-ebsblockdeviceconfig-volumespecification.html",
        "type": "object",
        "properties": {
          "Iops": {
            "$ref": "#/definitions/integer"
          },
          "SizeInGB": {
            "$ref": "#/definitions/integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "SizeInGB",
          "VolumeType"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-step-hadoopjarstepconfig": {
        "title": "Amazon EMR Step HadoopJarStepConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig.html",
        "type": "object",
        "properties": {
          "Args": {
            "$ref": "#/definitions/list<string>"
          },
          "Jar": {
            "$ref": "#/definitions/string"
          },
          "MainClass": {
            "$ref": "#/definitions/string"
          },
          "StepProperties": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-emr-step-hadoopjarstepconfig-keyvalue"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "required": [
          "Jar"
        ],
        "additionalProperties": false
      },
      "aws-properties-emr-step-hadoopjarstepconfig-keyvalue": {
        "title": "Amazon EMR Step HadoopJarStepConfig KeyValue",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-emr-step-hadoopjarstepconfig-keyvalue.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-gamelift-alias-routingstrategy": {
        "title": "Amazon GameLift Alias RoutingStrategy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-alias-routingstrategy.html",
        "type": "object",
        "properties": {
          "FleetId": {
            "$ref": "#/definitions/string"
          },
          "Message": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-gamelift-build-storagelocation": {
        "title": "Amazon GameLift Build StorageLocation",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-build-storagelocation.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/string"
          },
          "Key": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Bucket",
          "Key",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-gamelift-fleet-ec2inboundpermission": {
        "title": "Amazon GameLift Fleet EC2InboundPermission",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-ec2inboundpermission.html",
        "type": "object",
        "properties": {
          "FromPort": {
            "$ref": "#/definitions/integer"
          },
          "IpRange": {
            "$ref": "#/definitions/string"
          },
          "Protocol": {
            "$ref": "#/definitions/string"
          },
          "ToPort": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "FromPort",
          "IpRange",
          "Protocol",
          "ToPort"
        ],
        "additionalProperties": false
      },
      "aws-properties-iam-policy": {
        "title": "IAM Policies",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html",
        "type": "object",
        "properties": {
          "PolicyDocument": {
            "type": "object"
          },
          "PolicyName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "PolicyDocument",
          "PolicyName"
        ],
        "additionalProperties": false
      },
      "aws-properties-iam-user-loginprofile": {
        "title": "IAM User LoginProfile",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html",
        "type": "object",
        "properties": {
          "Password": {
            "$ref": "#/definitions/string"
          },
          "PasswordResetRequired": {
            "$ref": "#/definitions/boolean"
          }
        },
        "required": [
          "Password"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-actions": {
        "title": "AWS IoT Actions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-actions.html",
        "type": "object",
        "properties": {
          "CloudwatchAlarm": {
            "$ref": "#/definitions/property_types/aws-properties-iot-cloudwatchalarm"
          },
          "CloudwatchMetric": {
            "$ref": "#/definitions/property_types/aws-properties-iot-cloudwatchmetric"
          },
          "DynamoDB": {
            "$ref": "#/definitions/property_types/aws-properties-iot-dynamodb"
          },
          "Elasticsearch": {
            "$ref": "#/definitions/property_types/aws-properties-iot-elasticsearch"
          },
          "Firehose": {
            "$ref": "#/definitions/property_types/aws-properties-iot-firehose"
          },
          "Kinesis": {
            "$ref": "#/definitions/property_types/aws-properties-iot-kinesis"
          },
          "Lambda": {
            "$ref": "#/definitions/property_types/aws-properties-iot-lambda"
          },
          "Republish": {
            "$ref": "#/definitions/property_types/aws-properties-iot-republish"
          },
          "S3": {
            "$ref": "#/definitions/property_types/aws-properties-iot-s3"
          },
          "Sns": {
            "$ref": "#/definitions/property_types/aws-properties-iot-sns"
          },
          "Sqs": {
            "$ref": "#/definitions/property_types/aws-properties-iot-sqs"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-iot-cloudwatchalarm": {
        "title": "AWS IoT CloudwatchAlarm Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-cloudwatchalarm.html",
        "type": "object",
        "properties": {
          "AlarmName": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "StateReason": {
            "$ref": "#/definitions/string"
          },
          "StateValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "AlarmName",
          "RoleArn",
          "StateReason",
          "StateValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-cloudwatchmetric": {
        "title": "AWS IoT CloudwatchMetric Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-cloudwatchmetric.html",
        "type": "object",
        "properties": {
          "MetricName": {
            "$ref": "#/definitions/string"
          },
          "MetricNamespace": {
            "$ref": "#/definitions/string"
          },
          "MetricTimestamp": {
            "$ref": "#/definitions/string"
          },
          "MetricUnit": {
            "$ref": "#/definitions/string"
          },
          "MetricValue": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "MetricName",
          "MetricNamespace",
          "MetricUnit",
          "MetricValue",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-dynamodb": {
        "title": "AWS IoT DynamoDB Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-dynamodb.html",
        "type": "object",
        "properties": {
          "HashKeyField": {
            "$ref": "#/definitions/string"
          },
          "HashKeyValue": {
            "$ref": "#/definitions/string"
          },
          "PayloadField": {
            "$ref": "#/definitions/string"
          },
          "RangeKeyField": {
            "$ref": "#/definitions/string"
          },
          "RangeKeyValue": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "TableName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "HashKeyField",
          "HashKeyValue",
          "RangeKeyField",
          "RangeKeyValue",
          "RoleArn",
          "TableName"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-elasticsearch": {
        "title": "AWS IoT Elasticsearch Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-elasticsearch.html",
        "type": "object",
        "properties": {
          "Endpoint": {
            "$ref": "#/definitions/string"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "Index": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Endpoint",
          "Id",
          "Index",
          "RoleArn",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-firehose": {
        "title": "AWS IoT Firehose Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-firehose.html",
        "type": "object",
        "properties": {
          "DeliveryStreamName": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DeliveryStreamName",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-kinesis": {
        "title": "AWS IoT Kinesis Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-kinesis.html",
        "type": "object",
        "properties": {
          "PartitionKey": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "StreamName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "RoleArn",
          "StreamName"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-lambda": {
        "title": "AWS IoT Lambda Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-lambda.html",
        "type": "object",
        "properties": {
          "FunctionArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "FunctionArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-republish": {
        "title": "AWS IoT Republish Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-republish.html",
        "type": "object",
        "properties": {
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "Topic": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "RoleArn",
          "Topic"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-s3": {
        "title": "AWS IoT S3 Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-s3.html",
        "type": "object",
        "properties": {
          "BucketName": {
            "$ref": "#/definitions/string"
          },
          "Key": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "BucketName",
          "Key",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-sns": {
        "title": "AWS IoT Sns Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-sns.html",
        "type": "object",
        "properties": {
          "MessageFormat": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "TargetArn": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "RoleArn",
          "TargetArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-sqs": {
        "title": "AWS IoT Sqs Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-sqs.html",
        "type": "object",
        "properties": {
          "QueueUrl": {
            "$ref": "#/definitions/string"
          },
          "RoleArn": {
            "$ref": "#/definitions/string"
          },
          "UseBase64": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "QueueUrl",
          "RoleArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-iot-topicrulepayload": {
        "title": "AWS IoT TopicRulePayload",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrulepayload.html",
        "type": "object",
        "properties": {
          "Actions": {
            "$ref": "#/definitions/property_types/aws-properties-iot-actions"
          },
          "AwsIotSqlVersion": {
            "$ref": "#/definitions/string"
          },
          "Description": {
            "$ref": "#/definitions/string"
          },
          "RuleDisabled": {
            "$ref": "#/definitions/boolean"
          },
          "Sql": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Actions",
          "RuleDisabled",
          "Sql"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions": {
        "title": "Amazon Kinesis Firehose DeliveryStream Destination CloudWatchLoggingOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions.html",
        "type": "object",
        "properties": {
          "Enabled": {
            "$ref": "#/definitions/boolean"
          },
          "LogGroupName": {
            "$ref": "#/definitions/string"
          },
          "LogStreamName": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration.html",
        "type": "object",
        "properties": {
          "BufferingHints": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints"
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
          },
          "DomainARN": {
            "$ref": "#/definitions/string"
          },
          "IndexName": {
            "$ref": "#/definitions/string"
          },
          "IndexRotationPeriod": {
            "$ref": "#/definitions/string"
          },
          "RetryOptions": {
            "$ref": "#/definitions/string"
          },
          "RoleARN": {
            "$ref": "#/definitions/string"
          },
          "S3BackupMode": {
            "$ref": "#/definitions/string"
          },
          "S3Configuration": {
            "$ref": "#/definitions/string"
          },
          "TypeName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "BufferingHints",
          "DomainARN",
          "IndexName",
          "IndexRotationPeriod",
          "RoleARN",
          "S3BackupMode",
          "TypeName"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints": {
        "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration BufferingHints",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-bufferinghints.html",
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "$ref": "#/definitions/integer"
          },
          "SizeInMBs": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "IntervalInSeconds",
          "SizeInMBs"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-retryoptions": {
        "title": "Amazon Kinesis Firehose DeliveryStream ElasticsearchDestinationConfiguration RetryOptions",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-elasticsearchdestinationconfiguration-retryoptions.html",
        "type": "object",
        "properties": {
          "DurationInSeconds": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "DurationInSeconds"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration.html",
        "type": "object",
        "properties": {
          "CloudWatchLoggingOptions": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
          },
          "ClusterJDBCURL": {
            "$ref": "#/definitions/string"
          },
          "CopyCommand": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand"
          },
          "Password": {
            "$ref": "#/definitions/string"
          },
          "RoleARN": {
            "$ref": "#/definitions/string"
          },
          "S3Configuration": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration"
          },
          "Username": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ClusterJDBCURL",
          "CopyCommand",
          "Password",
          "RoleARN",
          "S3Configuration",
          "Username"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand": {
        "title": "Amazon Kinesis Firehose DeliveryStream RedshiftDestinationConfiguration CopyCommand",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-redshiftdestinationconfiguration-copycommand.html",
        "type": "object",
        "properties": {
          "CopyOptions": {
            "$ref": "#/definitions/string"
          },
          "DataTableColumns": {
            "$ref": "#/definitions/string"
          },
          "DataTableName": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DataTableName"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration.html",
        "type": "object",
        "properties": {
          "BucketARN": {
            "$ref": "#/definitions/string"
          },
          "BufferingHints": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints"
          },
          "CloudWatchLoggingOptions": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-destination-cloudwatchloggingoptions"
          },
          "CompressionFormat": {
            "$ref": "#/definitions/string"
          },
          "EncryptionConfiguration": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration"
          },
          "Prefix": {
            "$ref": "#/definitions/string"
          },
          "RoleARN": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "BucketARN",
          "BufferingHints",
          "CompressionFormat",
          "Prefix",
          "RoleARN"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration BufferingHints",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-bufferinghints.html",
        "type": "object",
        "properties": {
          "IntervalInSeconds": {
            "$ref": "#/definitions/integer"
          },
          "SizeInMBs": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "IntervalInSeconds",
          "SizeInMBs"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration EncryptionConfiguration KMSEncryptionConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig.html",
        "type": "object",
        "properties": {
          "AWSKMSKeyARN": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "AWSKMSKeyARN"
        ],
        "additionalProperties": false
      },
      "aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration": {
        "title": "Amazon Kinesis Firehose DeliveryStream S3DestinationConfiguration EncryptionConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration.html",
        "type": "object",
        "properties": {
          "KMSEncryptionConfig": {
            "$ref": "#/definitions/property_types/aws-properties-kinesisfirehose-kinesisdeliverystream-s3destinationconfiguration-encryptionconfiguration-kmsencryptionconfig"
          },
          "NoEncryptionConfig": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-lambda-function-environment": {
        "title": "AWS Lambda Function Environment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-environment.html",
        "type": "object",
        "properties": {
          "Variables": {
            "$ref": "#/definitions/key-value-pairs"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-lambda-function-code": {
        "title": "AWS Lambda Function Code",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html",
        "type": "object",
        "properties": {
          "S3Bucket": {
            "$ref": "#/definitions/string"
          },
          "S3Key": {
            "$ref": "#/definitions/string"
          },
          "S3ObjectVersion": {
            "$ref": "#/definitions/string"
          },
          "ZipFile": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-lambda-function-vpcconfig": {
        "title": "AWS Lambda Function VPCConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html",
        "type": "object",
        "properties": {
          "SecurityGroupIds": {
            "$ref": "#/definitions/list<string>"
          },
          "SubnetIds": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "SecurityGroupIds",
          "SubnetIds"
        ],
        "additionalProperties": false
      },
      "aws-properties-name": {
        "title": "Name Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds": {
        "title": "AWS OpsWorks AutoScalingThresholds Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds.html",
        "type": "object",
        "properties": {
          "CpuThreshold": {
            "$ref": "#/definitions/integer"
          },
          "IgnoreMetricsTime": {
            "$ref": "#/definitions/integer"
          },
          "InstanceCount": {
            "$ref": "#/definitions/integer"
          },
          "LoadThreshold": {
            "$ref": "#/definitions/integer"
          },
          "MemoryThreshold": {
            "$ref": "#/definitions/integer"
          },
          "ThresholdsWaitTime": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-stack-chefconfiguration": {
        "title": "AWS OpsWorks ChefConfiguration Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-chefconfiguration.html",
        "type": "object",
        "properties": {
          "BerkshelfVersion": {
            "$ref": "#/definitions/string"
          },
          "ManageBerkshelf": {
            "$ref": "#/definitions/boolean"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-lifecycleeventconfiguration": {
        "title": "AWS OpsWorks Layer LifeCycleConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration.html",
        "type": "object",
        "properties": {
          "ShutdownEventConfiguration": {
            "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration": {
        "title": "AWS OpsWorks Layer LifeCycleConfiguration ShutdownEventConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-lifecycleeventconfiguration-shutdowneventconfiguration.html",
        "type": "object",
        "properties": {
          "DelayUntilElbConnectionsDrained": {
            "$ref": "#/definitions/boolean"
          },
          "ExecutionTimeout": {
            "$ref": "#/definitions/integer"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-loadbasedautoscaling": {
        "title": "AWS OpsWorks LoadBasedAutoScaling Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-loadbasedautoscaling.html",
        "type": "object",
        "properties": {
          "DownScaling": {
            "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds"
          },
          "Enable": {
            "$ref": "#/definitions/boolean"
          },
          "UpScaling": {
            "$ref": "#/definitions/property_types/aws-properties-opsworks-layer-loadbasedautoscaling-autoscalingthresholds"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-recipes": {
        "title": "AWS OpsWorks Recipes Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-recipes.html",
        "type": "object",
        "properties": {
          "Configure": {
            "$ref": "#/definitions/list<string>"
          },
          "Deploy": {
            "$ref": "#/definitions/list<string>"
          },
          "Setup": {
            "$ref": "#/definitions/list<string>"
          },
          "Shutdown": {
            "$ref": "#/definitions/list<string>"
          },
          "Undeploy": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-stack-source": {
        "title": "AWS OpsWorks Source Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-source.html",
        "type": "object",
        "properties": {
          "Password": {
            "$ref": "#/definitions/string"
          },
          "Revision": {
            "$ref": "#/definitions/string"
          },
          "SshKey": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Url": {
            "$ref": "#/definitions/string"
          },
          "Username": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-app-environment": {
        "title": "AWS OpsWorks App Environment",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-environment.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Secure": {
            "$ref": "#/definitions/boolean"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-opsworks-app-sslconfiguration": {
        "title": "AWS OpsWorks SslConfiguration Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-app-sslconfiguration.html",
        "type": "object",
        "properties": {
          "Certificate": {
            "$ref": "#/definitions/string"
          },
          "Chain": {
            "$ref": "#/definitions/string"
          },
          "PrivateKey": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Certificate",
          "PrivateKey"
        ],
        "additionalProperties": false
      },
      "aws-properties-opsworks-stack-stackconfigmanager": {
        "title": "AWS OpsWorks StackConfigurationManager Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-stack-stackconfigmanager.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Version": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-instance-timebasedautoscaling": {
        "title": "AWS OpsWorks TimeBasedAutoScaling Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-instance-timebasedautoscaling.html",
        "type": "object",
        "properties": {
          "Friday": {
            "$ref": "#/definitions/string"
          },
          "Monday": {
            "$ref": "#/definitions/string"
          },
          "Saturday": {
            "$ref": "#/definitions/string"
          },
          "Sunday": {
            "$ref": "#/definitions/string"
          },
          "Thursday": {
            "$ref": "#/definitions/string"
          },
          "Tuesday": {
            "$ref": "#/definitions/string"
          },
          "Wednesday": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-opsworks-layer-volumeconfig": {
        "title": "AWS OpsWorks VolumeConfiguration Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opsworks-layer-volumeconfig.html",
        "type": "object",
        "properties": {
          "Iops": {
            "$ref": "#/definitions/integer"
          },
          "MountPoint": {
            "$ref": "#/definitions/string"
          },
          "NumberOfDisks": {
            "$ref": "#/definitions/integer"
          },
          "RaidLevel": {
            "$ref": "#/definitions/integer"
          },
          "Size": {
            "$ref": "#/definitions/integer"
          },
          "VolumeType": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "MountPoint",
          "NumberOfDisks",
          "Size"
        ],
        "additionalProperties": false
      },
      "aws-property-redshift-clusterparametergroup-parameter": {
        "title": "Amazon Redshift Parameter Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-property-redshift-clusterparametergroup-parameter.html",
        "type": "object",
        "properties": {
          "ParameterName": {
            "$ref": "#/definitions/string"
          },
          "ParameterValue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ParameterName",
          "ParameterValue"
        ],
        "additionalProperties": false
      },
      "aws-properties-resource-tags": {
        "title": "AWS CloudFormation Resource Tags Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-rds-optiongroup-optionconfigurations": {
        "title": "Amazon RDS OptionGroup OptionConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations.html",
        "type": "object",
        "properties": {
          "DBSecurityGroupMemberships": {
            "$ref": "#/definitions/list<string>"
          },
          "OptionName": {
            "$ref": "#/definitions/string"
          },
          "OptionSettings": {
            "$ref": "#/definitions/property_types/aws-properties-rds-optiongroup-optionconfigurations-optionsettings"
          },
          "Port": {
            "$ref": "#/definitions/integer"
          },
          "VpcSecurityGroupMemberships": {
            "$ref": "#/definitions/list<string>"
          }
        },
        "required": [
          "OptionName"
        ],
        "additionalProperties": false
      },
      "aws-properties-rds-optiongroup-optionconfigurations-optionsettings": {
        "title": "Amazon RDS OptionGroup OptionConfigurations OptionSettings",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-optiongroup-optionconfigurations-optionsettings.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-rds-security-group-rule": {
        "title": "Amazon RDS Security Group Rule",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-security-group-rule.html",
        "type": "object",
        "properties": {
          "CIDRIP": {
            "$ref": "#/definitions/string"
          },
          "EC2SecurityGroupId": {
            "$ref": "#/definitions/string"
          },
          "EC2SecurityGroupName": {
            "$ref": "#/definitions/string"
          },
          "EC2SecurityGroupOwnerId": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-route53-aliastarget": {
        "title": "Route 53 AliasTarget Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html",
        "type": "object",
        "properties": {
          "DNSName": {
            "$ref": "#/definitions/string"
          },
          "EvaluateTargetHealth": {
            "$ref": "#/definitions/boolean"
          },
          "HostedZoneId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DNSName",
          "HostedZoneId"
        ],
        "additionalProperties": false
      },
      "aws-properties-route53-recordset-geolocation": {
        "title": "Amazon Route 53 Record Set GeoLocation Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset-geolocation.html",
        "type": "object",
        "properties": {
          "ContinentCode": {
            "$ref": "#/definitions/string"
          },
          "CountryCode": {
            "$ref": "#/definitions/string"
          },
          "SubdivisionCode": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-route53-healthcheck-healthcheckconfig": {
        "title": "Amazon Route 53 HealthCheckConfig",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html",
        "type": "object",
        "properties": {
          "FailureThreshold": {
            "$ref": "#/definitions/integer"
          },
          "FullyQualifiedDomainName": {
            "$ref": "#/definitions/string"
          },
          "IPAddress": {
            "$ref": "#/definitions/string"
          },
          "Port": {
            "$ref": "#/definitions/integer"
          },
          "RequestInterval": {
            "$ref": "#/definitions/integer"
          },
          "ResourcePath": {
            "$ref": "#/definitions/string"
          },
          "SearchString": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-route53-healthcheck-healthchecktags": {
        "title": "Amazon Route 53 HealthCheckTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthchecktags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-route53-hostedzone-hostedzoneconfig": {
        "title": "Amazon Route 53 HostedZoneConfig Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzoneconfig.html",
        "type": "object",
        "properties": {
          "Comment": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-route53-hostedzone-hostedzonetags": {
        "title": "Amazon Route 53 HostedZoneTags",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-hostedzone-hostedzonetags.html",
        "type": "object",
        "properties": {
          "Key": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Key",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-resource-route53-hostedzone-hostedzonevpcs": {
        "title": "Amazon Route 53 HostedZoneVPCs",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53-hostedzone-hostedzonevpcs.html",
        "type": "object",
        "properties": {
          "VPCId": {
            "$ref": "#/definitions/string"
          },
          "VPCRegion": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "VPCId",
          "VPCRegion"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-cors": {
        "title": "Amazon S3 Cors Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors.html",
        "type": "object",
        "properties": {
          "CorsRules": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-cors-corsrule"
          }
        },
        "required": [
          "CorsRules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-cors-corsrule": {
        "title": "Amazon S3 Cors Configuration Rule",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-cors-corsrule.html",
        "type": "object",
        "properties": {
          "AllowedHeaders": {
            "$ref": "#/definitions/list<string>"
          },
          "AllowedMethods": {
            "$ref": "#/definitions/list<string>"
          },
          "AllowedOrigins": {
            "$ref": "#/definitions/list<string>"
          },
          "ExposedHeaders": {
            "$ref": "#/definitions/list<string>"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "MaxAge": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "AllowedMethods",
          "AllowedOrigins"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig": {
        "title": "Amazon S3 Lifecycle Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig.html",
        "type": "object",
        "properties": {
          "Rules": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig-rule"
          }
        },
        "required": [
          "Rules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig-rule": {
        "title": "Amazon S3 Lifecycle Rule",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html",
        "type": "object",
        "properties": {
          "ExpirationDate": {
            "$ref": "#/definitions/string"
          },
          "ExpirationInDays": {
            "$ref": "#/definitions/integer"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "NoncurrentVersionExpirationInDays": {
            "$ref": "#/definitions/integer"
          },
          "NoncurrentVersionTransition": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
          },
          "NoncurrentVersionTransitions": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          },
          "Prefix": {
            "$ref": "#/definitions/string"
          },
          "Status": {
            "$ref": "#/definitions/string"
          },
          "Transition": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig-rule-transition"
          },
          "Transitions": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-s3-bucket-lifecycleconfig-rule-transition"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "required": [
          "Status"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition": {
        "title": "Amazon S3 Lifecycle Rule NoncurrentVersionTransition",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition.html",
        "type": "object",
        "properties": {
          "StorageClass": {
            "$ref": "#/definitions/string"
          },
          "TransitionInDays": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "StorageClass",
          "TransitionInDays"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-lifecycleconfig-rule-transition": {
        "title": "Amazon S3 Lifecycle Rule Transition",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html",
        "type": "object",
        "properties": {
          "StorageClass": {
            "$ref": "#/definitions/string"
          },
          "TransitionDate": {
            "$ref": "#/definitions/string"
          },
          "TransitionInDays": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "StorageClass"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-loggingconfig": {
        "title": "Amazon S3 Logging Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-loggingconfig.html",
        "type": "object",
        "properties": {
          "DestinationBucketName": {
            "$ref": "#/definitions/string"
          },
          "LogFilePrefix": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig": {
        "title": "Amazon S3 NotificationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig.html",
        "type": "object",
        "properties": {
          "LambdaConfigurations": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfig-lambdaconfig"
          },
          "QueueConfigurations": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfig-queueconfig"
          },
          "TopicConfigurations": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfig-topicconfig"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfiguration-config-filter": {
        "title": "Amazon S3 NotificationConfiguration Config Filter",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter.html",
        "type": "object",
        "properties": {
          "S3Key": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key"
          }
        },
        "required": [
          "S3Key"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key": {
        "title": "Amazon S3 NotificationConfiguration Config Filter S3Key",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key.html",
        "type": "object",
        "properties": {
          "Rules": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "required": [
          "Rules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules": {
        "title": "Amazon S3 NotificationConfiguration Config Filter S3Key Rules",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfiguration-config-filter-s3key-rules.html",
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig-lambdaconfig": {
        "title": "Amazon Simple Storage Service NotificationConfiguration LambdaConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-lambdaconfig.html",
        "type": "object",
        "properties": {
          "Event": {
            "$ref": "#/definitions/string"
          },
          "Filter": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfiguration-config-filter"
          },
          "Function": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Event",
          "Function"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig-queueconfig": {
        "title": "Amazon Simple Storage Service NotificationConfiguration QueueConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-queueconfig.html",
        "type": "object",
        "properties": {
          "Event": {
            "$ref": "#/definitions/string"
          },
          "Filter": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfiguration-config-filter"
          },
          "Queue": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Event",
          "Queue"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-notificationconfig-topicconfig": {
        "title": "Amazon S3 NotificationConfiguration TopicConfigurations",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-notificationconfig-topicconfig.html",
        "type": "object",
        "properties": {
          "Event": {
            "$ref": "#/definitions/string"
          },
          "Filter": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-notificationconfiguration-config-filter"
          },
          "Topic": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Event",
          "Topic"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-replicationconfiguration": {
        "title": "Amazon S3 ReplicationConfiguration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration.html",
        "type": "object",
        "properties": {
          "Role": {
            "$ref": "#/definitions/string"
          },
          "Rules": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-s3-bucket-replicationconfiguration-rules"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "required": [
          "Role",
          "Rules"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-replicationconfiguration-rules": {
        "title": "Amazon S3 ReplicationConfiguration Rules",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules.html",
        "type": "object",
        "properties": {
          "Destination": {
            "$ref": "#/definitions/property_types/aws-properties-s3-bucket-replicationconfiguration-rules-destination"
          },
          "Id": {
            "$ref": "#/definitions/string"
          },
          "Prefix": {
            "$ref": "#/definitions/string"
          },
          "Status": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Destination",
          "Prefix",
          "Status"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-replicationconfiguration-rules-destination": {
        "title": "Amazon S3 ReplicationConfiguration Rules Destination",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-replicationconfiguration-rules-destination.html",
        "type": "object",
        "properties": {
          "Bucket": {
            "$ref": "#/definitions/string"
          },
          "StorageClass": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Bucket"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-bucket-versioningconfig": {
        "title": "Amazon S3 Versioning Configuration",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-versioningconfig.html",
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Status"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration": {
        "title": "Amazon S3 Website Configuration Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration.html",
        "type": "object",
        "properties": {
          "ErrorDocument": {
            "$ref": "#/definitions/string"
          },
          "IndexDocument": {
            "$ref": "#/definitions/string"
          },
          "RedirectAllRequestsTo": {
            "$ref": "#/definitions/property_types/aws-properties-s3-websiteconfiguration-redirectallrequeststo"
          },
          "RoutingRules": {
            "oneOf": [{
                "type": "array",
                "items": {
                  "$ref": "#/definitions/property_types/aws-properties-s3-websiteconfiguration-routingrules"
                }
              },
              {
                "$ref": "#/definitions/function"
              }
            ]
          }
        },
        "required": [
          "IndexDocument"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-redirectallrequeststo": {
        "title": "Amazon S3 Website Configuration Redirect All Requests To Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-redirectallrequeststo.html",
        "type": "object",
        "properties": {
          "HostName": {
            "$ref": "#/definitions/string"
          },
          "Protocol": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "HostName"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-routingrules": {
        "title": "Amazon S3 Website Configuration Routing Rules Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html",
        "type": "object",
        "properties": {
          "RedirectRule": {
            "$ref": "#/definitions/property_types/aws-properties-s3-websiteconfiguration-routingrules-redirectrule"
          },
          "RoutingRuleCondition": {
            "$ref": "#/definitions/property_types/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition"
          }
        },
        "required": [
          "RedirectRule"
        ],
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-routingrules-redirectrule": {
        "title": "Amazon S3 Website Configuration Routing Rules Redirect Rule Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-redirectrule.html",
        "type": "object",
        "properties": {
          "HostName": {
            "$ref": "#/definitions/string"
          },
          "HttpRedirectCode": {
            "$ref": "#/definitions/string"
          },
          "Protocol": {
            "$ref": "#/definitions/string"
          },
          "ReplaceKeyPrefixWith": {
            "$ref": "#/definitions/string"
          },
          "ReplaceKeyWith": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition": {
        "title": "Amazon S3 Website Configuration Routing Rules Routing Rule Condition Property",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules-routingrulecondition.html",
        "type": "object",
        "properties": {
          "HttpErrorCodeReturnedEquals": {
            "$ref": "#/definitions/string"
          },
          "KeyPrefixEquals": {
            "$ref": "#/definitions/string"
          }
        },
        "additionalProperties": false
      },
      "aws-properties-sns-subscription": {
        "title": "Amazon SNS Subscription Property Type",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-subscription.html",
        "type": "object",
        "properties": {
          "Endpoint": {
            "$ref": "#/definitions/string"
          },
          "Protocol": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Endpoint",
          "Protocol"
        ],
        "additionalProperties": false
      },
      "aws-properties-sqs-queues-redrivepolicy": {
        "title": "Amazon SQS RedrivePolicy",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues-redrivepolicy.html",
        "type": "object",
        "properties": {
          "deadLetterTargetArn": {
            "$ref": "#/definitions/string"
          },
          "maxReceiveCount": {
            "$ref": "#/definitions/integer"
          }
        },
        "required": [
          "deadLetterTargetArn"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-bytematchset-bytematchtuples": {
        "title": "AWS WAF ByteMatchSet ByteMatchTuples",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples.html",
        "type": "object",
        "properties": {
          "FieldToMatch": {
            "$ref": "#/definitions/property_types/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch"
          },
          "PositionalConstraint": {
            "$ref": "#/definitions/string"
          },
          "TargetString": {
            "$ref": "#/definitions/string"
          },
          "TargetStringBase64": {
            "$ref": "#/definitions/string"
          },
          "TextTransformation": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "FieldToMatch",
          "PositionalConstraint",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch": {
        "title": "AWS WAF ByteMatchSet ByteMatchTuples FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-ipset-ipsetdescriptors": {
        "title": "AWS WAF IPSet IPSetDescriptors",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-ipset-ipsetdescriptors.html",
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/definitions/string"
          },
          "Value": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type",
          "Value"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-rule-predicates": {
        "title": "AWS WAF Rule Predicates",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html",
        "type": "object",
        "properties": {
          "DataId": {
            "$ref": "#/definitions/string"
          },
          "Negated": {
            "$ref": "#/definitions/boolean"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "DataId",
          "Negated",
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sizeconstraintset-sizeconstraint": {
        "title": "AWS WAF SizeConstraintSet SizeConstraint",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint.html",
        "type": "object",
        "properties": {
          "ComparisonOperator": {
            "$ref": "#/definitions/string"
          },
          "FieldToMatch": {
            "$ref": "#/definitions/property_types/aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch"
          },
          "Size": {
            "$ref": "#/definitions/integer"
          },
          "TextTransformation": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "ComparisonOperator",
          "FieldToMatch",
          "Size",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch": {
        "title": "AWS WAF SizeConstraintSet SizeConstraint FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sizeconstraintset-sizeconstraint-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples": {
        "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples.html",
        "type": "object",
        "properties": {
          "FieldToMatch": {
            "$ref": "#/definitions/property_types/aws-properties-waf-bytematchset-bytematchtuples-fieldtomatch"
          },
          "TextTransformation": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "FieldToMatch",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch": {
        "title": "AWS WAF SqlInjectionMatchSet SqlInjectionMatchTuples FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-sqlinjectionmatchset-sqlinjectionmatchtuples-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-xssmatchset-xssmatchtuple": {
        "title": "AWS WAF XssMatchSet XssMatchTuple",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple.html",
        "type": "object",
        "properties": {
          "FieldToMatch": {
            "$ref": "#/definitions/property_types/aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch"
          },
          "TextTransformation": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "FieldToMatch",
          "TextTransformation"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch": {
        "title": "AWS WAF XssMatchSet XssMatchTuple FieldToMatch",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-xssmatchset-xssmatchtuple-fieldtomatch.html",
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/definitions/string"
          },
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-webacl-action": {
        "title": "AWS WAF WebACL Action",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-action.html",
        "type": "object",
        "properties": {
          "Type": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Type"
        ],
        "additionalProperties": false
      },
      "aws-properties-waf-webacl-rules": {
        "title": "AWS WAF WebACL Rules",
        "descriptionURL": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-webacl-rules.html",
        "type": "object",
        "properties": {
          "Action": {
            "$ref": "#/definitions/property_types/aws-properties-waf-webacl-action"
          },
          "Priority": {
            "$ref": "#/definitions/integer"
          },
          "RuleId": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Action",
          "Priority",
          "RuleId"
        ],
        "additionalProperties": false
      }
    },
    "string": {
      "oneOf": [{
          "type": "string"
        },
        {
          "$ref": "#/definitions/function"
        }
      ]
    },
    "integer": {
      "oneOf": [{
          "type": "string",
          "pattern": "^-?[0-9]+$"
        },
        {
          "type": "integer"
        },
        {
          "$ref": "#/definitions/function"
        }
      ]
    },
    "boolean": {
      "oneOf": [{
          "type": "boolean"
        },
        {
          "type": "string",
          "enum": [
            "True",
            "False",
            "true",
            "false"
          ]
        },
        {
          "$ref": "#/definitions/function"
        }
      ]
    },
    "timestamp": {
      "oneOf": [{
          "type": "string",
          "pattern": "^[0-9]{10}$"
        },
        {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        {
          "type": "string",
          "format": "date-time"
        },
        {
          "$ref": "#/definitions/function"
        }
      ]
    },
    "primitive": {
      "anyOf": [{
          "$ref": "#/definitions/string"
        },
        {
          "$ref": "#/definitions/integer"
        },
        {
          "$ref": "#/definitions/boolean"
        }
      ]
    },
    "list<string>": {
      "oneOf": [{
          "type": "array",
          "items": {
            "$ref": "#/definitions/string"
          }
        },
        {
          "$ref": "#/definitions/function"
        }
      ]
    },
    "key-value-pairs": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/string"
      }
    },
    "function": {
      "oneOf": [{
          "$ref": "#/definitions/functions/Fn::Base64"
        },
        {
          "$ref": "#/definitions/functions/Fn::FindInMap"
        },
        {
          "$ref": "#/definitions/functions/Fn::GetAtt"
        },
        {
          "$ref": "#/definitions/functions/Fn::GetAZs"
        },
        {
          "$ref": "#/definitions/functions/Fn::Join"
        },
        {
          "$ref": "#/definitions/condition_function"
        },
        {
          "$ref": "#/definitions/functions/Fn::Select"
        },
        {
          "$ref": "#/definitions/functions/Fn::ImportValue"
        },
        {
          "$ref": "#/definitions/functions/Fn::Split"
        },
        {
          "$ref": "#/definitions/functions/Fn::Sub"
        },
        {
          "$ref": "#/definitions/functions/Ref"
        }
      ]
    },
    "functions": {
      "Fn::Base64": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Base64": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Fn::Base64"
        ]
      },
      "Fn::FindInMap": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::FindInMap": {
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": {
              "oneOf": [{
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/functions/Fn::FindInMap"
                },
                {
                  "$ref": "#/definitions/functions/Ref"
                }
              ]
            }
          }
        },
        "required": [
          "Fn::FindInMap"
        ]
      },
      "Fn::GetAtt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::GetAtt": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [{
                "type": "string"
              },
              {
                "oneOf": [{
                    "type": "string"
                  },
                  {
                    "$ref": "#/definitions/functions/Ref"
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "Fn::GetAtt"
        ]
      },
      "Fn::GetAZs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::GetAZs": {
            "oneOf": [{
                "type": "string"
              },
              {
                "$ref": "#/definitions/functions/Ref"
              }
            ]
          }
        },
        "required": [
          "Fn::GetAZs"
        ]
      },
      "Fn::Join": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Join": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [{
                "type": "string"
              },
              {
                "oneOf": [{
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/primitive"
                    }
                  },
                  {
                    "$ref": "#/definitions/function"
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "Fn::Join"
        ]
      },
      "Fn::Select": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Select": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [{
                "$ref": "#/definitions/integer"
              },
              {}
            ]
          }
        },
        "required": [
          "Fn::Select"
        ]
      },
      "Fn::ImportValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::ImportValue": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [{
                "$ref": "#/definitions/string"
              }, {
                "$ref": "#/definitions/functions/Fn::Base64"
              }, {
                "$ref": "#/definitions/functions/Fn::FindInMap"
              }, {
                "$ref": "#/definitions/condition_functions/Fn::If"
              }, {
                "$ref": "#/definitions/functions/Fn::Join"
              }, {
                "$ref": "#/definitions/functions/Fn::Select"
              }, {
                "$ref": "#/definitions/functions/Fn::Split"
              }, {
                "$ref": "#/definitions/functions/Fn::Sub"
              }, {
                "$ref": "#/definitions/functions/Ref"
              }]
          }
        },
        "required": [
          "Fn::ImportValue"
        ]
      },
      "Fn::Split": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Split": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [{
                "type": "string"
              },
              {
                "oneOf": [{
                  "$ref": "#/definitions/string"
                }, {
                  "$ref": "#/definitions/functions/Fn::Base64"
                }, {
                  "$ref": "#/definitions/functions/Fn::FindInMap"
                }, {
                  "$ref": "#/definitions/functions/Fn::GetAtt"
                }, {
                  "$ref": "#/definitions/functions/Fn::GetAZs"
                }, {
                  "$ref": "#/definitions/condition_functions/Fn::If"
                }, {
                  "$ref": "#/definitions/functions/Fn::ImportValue"
                }, {
                  "$ref": "#/definitions/functions/Fn::Join"
                }, {
                  "$ref": "#/definitions/functions/Fn::Select"
                }, {
                  "$ref": "#/definitions/functions/Fn::Sub"
                }, {
                  "$ref": "#/definitions/functions/Ref"
                }]
              }
            ]
          }
        },
        "required": [
          "Fn::Split"
        ]
      },
      "Fn::Sub": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Sub": {
            "oneOf": [{
                "$ref": "#/definitions/string"
              },
              {
                "type": "array",
                "minItems": 2,
                "items": [{
                    "type": "string"
                  },
                  {
                    "oneOf": [{
                      "$ref": "#/definitions/string"
                    }, {
                      "$ref": "#/definitions/functions/Fn::Base64"
                    }, {
                      "$ref": "#/definitions/functions/Fn::FindInMap"
                    }, {
                      "$ref": "#/definitions/functions/Fn::GetAtt"
                    }, {
                      "$ref": "#/definitions/functions/Fn::GetAZs"
                    }, {
                      "$ref": "#/definitions/condition_functions/Fn::If"
                    }, {
                      "$ref": "#/definitions/functions/Fn::ImportValue"
                    }, {
                      "$ref": "#/definitions/functions/Fn::Join"
                    }, {
                      "$ref": "#/definitions/functions/Fn::Select"
                    }, {
                      "$ref": "#/definitions/functions/Ref"
                    }]
                  }
                ]
              }
            ]
          }
        },
        "required": [
          "Fn::Sub"
        ]
      },
      "Ref": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Ref": {
            "$ref": "#/definitions/string"
          }
        },
        "required": [
          "Ref"
        ]
      }
    },
    "condition_function": {
      "type": "object",
      "oneOf": [{
          "$ref": "#/definitions/condition_functions/Fn::And"
        },
        {
          "$ref": "#/definitions/condition_functions/Fn::Equals"
        },
        {
          "$ref": "#/definitions/condition_functions/Fn::If"
        },
        {
          "$ref": "#/definitions/condition_functions/Fn::Not"
        },
        {
          "$ref": "#/definitions/condition_functions/Fn::Or"
        }
      ]
    },
    "condition_functions": {
      "Fn::And": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::And": {
            "type": "array",
            "minItems": 2,
            "maxItems": 10,
            "items": {
              "oneOf": [{
                  "$ref": "#/definitions/condition"
                },
                {
                  "$ref": "#/definitions/condition_function"
                }
              ]
            }
          }
        },
        "required": [
          "Fn::And"
        ]
      },
      "Fn::Equals": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Equals": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": {
              "anyOf": [{
                  "$ref": "#/definitions/string"
                },
                {
                  "$ref": "#/definitions/integer"
                },
                {
                  "$ref": "#/definitions/boolean"
                },
                {
                  "$ref": "#/definitions/function"
                }
              ]
            }
          }
        },
        "required": [
          "Fn::Equals"
        ]
      },
      "Fn::If": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::If": {
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": [{
                "type": "string"
              },
              {},
              {}
            ]
          }
        },
        "required": [
          "Fn::If"
        ]
      },
      "Fn::Not": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Not": {
            "type": "array",
            "minItems": 1,
            "maxItems": 1,
            "items": {
              "oneOf": [{
                  "$ref": "#/definitions/condition"
                },
                {
                  "$ref": "#/definitions/condition_function"
                }
              ]
            }
          }
        },
        "required": [
          "Fn::Not"
        ]
      },
      "Fn::Or": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Fn::Or": {
            "type": "array",
            "minItems": 2,
            "maxItems": 10,
            "items": {
              "oneOf": [{
                  "$ref": "#/definitions/condition"
                },
                {
                  "$ref": "#/definitions/condition_function"
                }
              ]
            }
          }
        },
        "required": [
          "Fn::Or"
        ]
      }
    },
    "condition": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Condition": {
          "type": "string"
        }
      },
      "required": [
        "Condition"
      ]
    }
  }
}